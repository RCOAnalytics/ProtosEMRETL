<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/23/2022 10:20:57 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PH-DEV-30"
  DTS:CreatorName="GNS\Smerukar"
  DTS:DTSID="{65DFD136-7A7A-4825-8104-362ABDF77F15}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.521.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="146"
  DTS:VersionGUID="{5769362C-5F39-4099-A523-F2328A60A02A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Azure Storage Connection]"
      DTS:CreationName="AzureStorage"
      DTS:DTSID="{7ACC443F-9A43-42E1-88A4-D5C5DD8B0BE3}"
      DTS:ObjectName="Azure Storage Connection">
      <DTS:PropertyExpression
        DTS:Name="AccountName">@[$Project::azure_account_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="SasToken">@[$Project::azure_sas_token]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <AzureStorageConnectionManager
          ConnectionString="AuthType=SharedAccessSignature;SasResourcePath=;AccountName=bause1devrawmtv;DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;"
          ConnectByProxy="False">
          <SasToken
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAmgxAFNmYB0S33Yrv1dtRGgAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAB5Pm/pbcVn677GyYgjLiqYAAAAAASAAACgAAAAEAAAACV5LVHFQZwKph31NZSA02c4AQAAUn7vJp4JcpsgC8A7I6nb+Ddjvokwh1zv35AogagMG0Ny55CcCMHPBruarXV8fhcmOtRCQeCEJxsS4d+CKSC7qsAbNPGHHYeYFPk0Ae5PP/RJFJ+9ZxGIxtojVgXvE+LWg5VRg49pbSkFKd/xr+2eeYePTzGR2cQjBqrD1hZENHHfvXoAnjXUBEF1rdLAmc5k6WBlVVovnJp/CtUId1x7l3IUBC4a6ttzUTulLYks2leDVXsahBRMfTvRAdG6r6l9fSuTyBRJR6WlUGaPlhTjZ48PaHHlmM/vmkiGRL+vcaV7E2GLAjzcabZ1tJzqXn5zK1wLeqpx5nDlcYZBuUBiqVysMZraw3+9wI1tK2cNcM0CxH9fCNYI3xIHmncsdO/TNHU5o0iRk3+fyr0xTqB0mKY/PCLLty7zFAAAAGzsKff+j1Zl0uyNIxDja19ILEeY</SasToken>
        </AzureStorageConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LoggingDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1AECDEB1-DE3D-43B4-B2FB-D8977A4BD016}"
      DTS:ObjectName="LoggingDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::loggingdb_db_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::db_password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::db_server_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::db_username]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=ba-use1-sandbox-ass-data.database.windows.net;User ID=RJain;Initial Catalog=LoggingDB;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAmgxAFNmYB0S33Yrv1dtRGgAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAABl0VcpcM6btMmpL/w/zLvpAAAAAASAAACgAAAAEAAAANrNDVSorly+gLCv9tRFRnIYAAAAdFvI9WtD9+noIrMfyrpYy/IMsFDJeE48FAAAAORfkyZishZuI5DqhP7Po3AVi131</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RCO_Demographic]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{751DA957-8217-4EC5-A82D-EF1C46A6E95B}"
      DTS:ObjectName="RCO_Demographic">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::rcoa_demographics_db_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::db_password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::db_server_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::db_username]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=ba-use1-sandbox-ass-data.database.windows.net;User ID=RJain;Initial Catalog=RCOA_Demographics;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAmgxAFNmYB0S33Yrv1dtRGgAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAwuQURMgMqPrMn1YHU8lfSAAAAAASAAACgAAAAEAAAALAFEtANajC8B++6JA5rzc4YAAAAkPkeGmUNtbzCQABJO/PqDnFuVi2XH3dAFAAAAEieW3gWEEWPJjdRPA65qxhw/SHY</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RCO_DW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{589DF859-33AB-4C27-ACFA-92373364397D}"
      DTS:ObjectName="RCO_DW">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::rco_dw_db_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::db_password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::db_server_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::db_username]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=ba-use1-sandbox-ass-data.database.windows.net;User ID=RJain;Initial Catalog=rco_dw;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAmgxAFNmYB0S33Yrv1dtRGgAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAHoX4YPBCWmhNdfFAmvupqAAAAAASAAACgAAAAEAAAAEzHcQRk8sfBNHrRML2XskAYAAAA2gNRVGLc2RS4LHiK7xzO9TgsP6Okgh66FAAAAJOea52voqdr2N00I8lrZD1oTb1U</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RCO_Ods DB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6F0586C1-CB89-4B97-B214-41F7CF47793F}"
      DTS:ObjectName="RCO_Ods DB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::rco_ods_db_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::db_password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::db_server_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::db_username]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=ba-use1-sandbox-ass-data.database.windows.net;User ID=RJain;Initial Catalog=rco_ods;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAmgxAFNmYB0S33Yrv1dtRGgAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAtVjIJtG7Sk8LvFGnTC/nsAAAAAASAAACgAAAAEAAAAHsNWtCRIzFM35IRSbEl+hcYAAAAeOqCCPsDNsv1i7xwjpaIFEV2JeMAxp1FFAAAACF83XontK00m6ebBLXYyOnM8Qem</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{099F7BC9-E88F-4298-A311-CAEC927E5427}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DatesList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{501FEABC-260B-4CCB-85F9-CB89EEE3AD6E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorRecordCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{48C38E9D-8E43-4E8A-8B73-DE2330888096}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ETLBatchId">
      <DTS:VariableValue
        DTS:DataType="3">95873</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{42C002A4-C508-4600-923C-72BAB0F4E27F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ETLBatchTS">
      <DTS:VariableValue
        DTS:DataType="7">12/2/2022 9:48:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{62D40A17-00D9-4D13-9766-838C982883B9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileDate">
      <DTS:VariableValue
        DTS:DataType="8">20221106</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{98989FCA-E239-41B0-B174-477C7EF1DE60}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FolderNames">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19234B0A-95D3-44DB-B06F-FEE4C79E46D6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PracticeExists">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38F20E0D-1ABA-468D-8F98-46B778BFA89C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PracticeShortName">
      <DTS:VariableValue
        DTS:DataType="8">EMR</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{59FDACAC-173E-4E14-A74A-C30B7EF86289}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessedZipName">
      <DTS:VariableValue
        DTS:DataType="8">EMRPRAC1_20221130_Processed20221208_235354.zip</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Flexible file download"
      DTS:CreationName="ExtensibleFileTask"
      DTS:Description="Flexible file download"
      DTS:Disabled="True"
      DTS:DTSID="{84FFED4E-B9B3-40E8-86D0-DA1070F66102}"
      DTS:ExecutableType="ExtensibleFileTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Flexible file download"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="DestinationFolderPath">@[$Project::azure_file_share_container_name]+"\\"+ @[$Project::Working_Folder_Path]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="SourceFileName">"*"+@[$Project::azure_source_file_extension]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="SourceFolderPath">@[$Project::azure_source_container_name]+"\\"+ @[$Project::azure_source_folder_path]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ExtensibleFileTask
          Operation="Copy"
          SourceConnectionType="AzureStorage"
          SourceConnectionId="{7ACC443F-9A43-42E1-88A4-D5C5DD8B0BE3}"
          SourceFolderPath="emr-file-patient-load\source"
          SourceFileName="*.csv"
          SearchRecursively="True"
          DestinationConnectionType="LocalFileSystem"
          DestinationFolderPath="F:\unzip"
          ConnectionType="LocalFileSystem"
          DeleteRecursively="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{0578D9A2-4E5C-4CA3-A08D-C4538F6F97B2}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
        DTS:DTSID="{3B1C023B-B9A3-410E-944A-2BC37180904E}"
        DTS:ObjectName="{3B1C023B-B9A3-410E-944A-2BC37180904E}">
        <DTS:ObjectData>
          <FEEFVE
            VariableName="User::FolderNames" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{E494FC5B-99F3-46CA-A99C-1064AFEE9ADC}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
            DTS:DTSID="{1A35A19C-12CD-48B0-B046-0DB3B1A35BD6}"
            DTS:ObjectName="{1A35A19C-12CD-48B0-B046-0DB3B1A35BD6}">
            <DTS:ObjectData>
              <FEEFVE
                VariableName="User::DatesList" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Create Batch Entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Add records to batch log table"
              DTS:DTSID="{127413a1-ddfc-4a37-b708-3cb0ba737c0a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Batch Entry"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{1AECDEB1-DE3D-43B4-B2FB-D8977A4BD016}"
                  SQLTask:SqlStatementSource="DECLARE @ETLBatchTS datetime = getdate();&#xA;DECLARE @PracticeName VARCHAR(20) =?&#xA;DECLARE @FileDate VARCHAR(20) =?&#xA;&#xA;&#xA;&#xA;INSERT INTO BatchLog&#xA;(StartDateTime, [Status], [Source], [FileName])&#xA;SELECT @ETLBatchTS, 'S', @PracticeName,@FileDate;&#xA;SELECT @@IDENTITY AS 'ETLBatchID', @ETLBatchTS AS 'ETLBatchTS'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="ETLBatchID"
                    SQLTask:DtsVariableName="User::ETLBatchId" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="ETLBatchTS"
                    SQLTask:DtsVariableName="User::ETLBatchTS" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::PracticeShortName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::FileDate"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Create Zip File"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{953fb970-de1c-4f19-8a8a-637ce115e631}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Zip File"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_9c0629407e8a4841ac75e826f57c6d60"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::FileDate,User::PracticeShortName,$Project::Working_Folder_Path,$Project::azure_file_share_container_name"
                  ReadWriteVariables="User::ProcessedZipName">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc6fd973eb9a405e9b8c5a095059ac66.Properties.Settings.get_Default():ST_cc6fd973eb9a405e9b8c5a095059ac66.Properties.Sett" +
    "ings")]

namespace ST_cc6fd973eb9a405e9b8c5a095059ac66.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
using System.Text.RegularExpressions;
using System.IO.Compression;
#endregion

namespace ST_cc6fd973eb9a405e9b8c5a095059ac66
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.

        /// 

        private static string working_folder_practice_folder,fileDate, practiceShortName,currentDateTime, processedZipName = @"";

        public void Main()
        {
            // TODO: Add your code here
           

            working_folder_practice_folder = Dts.Variables["$Project::azure_file_share_container_name"].Value.ToString() + "\\"+ Dts.Variables["$Project::Working_Folder_Path"].Value.ToString() + "\\" + Dts.Variables["User::PracticeShortName"].Value.ToString();
            practiceShortName = Dts.Variables["User::PracticeShortName"].Value.ToString();
            fileDate = Dts.Variables["User::FileDate"].Value.ToString();
            currentDateTime = DateTime.Now.ToString("yyyyMMdd_HHmmss");
            processedZipName = practiceShortName + "_" + fileDate + "_" + "Processed" + currentDateTime + ".zip";
            var zip = ZipFile.Open(working_folder_practice_folder + "\\" + processedZipName, ZipArchiveMode.Create);

            var practice_directory = new DirectoryInfo(working_folder_practice_folder);
            FileInfo[] files = practice_directory.GetFiles("*"+ fileDate + ".*");
            foreach (FileInfo file in files)
            {
                zip.CreateEntryFromFile(file.FullName, Path.GetFileName(file.FullName), CompressionLevel.Optimal);
                file.Delete();
            }
            zip.Dispose();


            Dts.Variables["User::ProcessedZipName"].Value = processedZipName;
            Dts.TaskResult = (int)ScriptResults.Success;

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>

        #endregion

    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_9c0629407e8a4841ac75e826f57c6d60.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1E040AFE-1D68-4A37-B132-CAB6A3839F33}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_cc6fd973eb9a405e9b8c5a095059ac66</RootNamespace>
    <AssemblyName>ST_9c0629407e8a4841ac75e826f57c6d60</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.IO.Compression.FileSystem" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9c0629407e8a4841ac75e826f57c6d60</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9c0629407e8a4841ac75e826f57c6d60</msb:DisplayName>
    <msb:ProjectId>{C07FE959-265D-4A52-93B1-2012FB1B69A7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9c0629407e8a4841ac75e826f57c6d60.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_cc6fd973eb9a405e9b8c5a095059ac66")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_cc6fd973eb9a405e9b8c5a095059ac66")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc6fd973eb9a405e9b8c5a095059ac66.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc6fd973eb9a405e9b8c5a095059ac66.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc6fd973eb9a405e9b8c5a095059ac66.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_cc6fd973eb9a405e9b8c5a095059ac66.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_cc6fd973eb9a405e9b8c5a095059ac66.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_9c0629407e8a4841ac75e826f57c6d60.dll">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
BgABAEMiAAAAAJMIcwXLAAEAbyIAAAAAkwhtAdAAAQB2IgAAAACTCHkB1QABAH4iAAAAAJYItwbb
AAIAhSIAAAAAhhiHBQYAAgCNIgAAAACRGI0FxwACAAAAAQCjAwkAhwUBABEAhwUGABkAhwUKACkA
hwUQADEAhwUQADkAhwUQAEEAhwUQAEkAhwUQAFEAhwUQAFkAhwUQAGEAhwUQAGkAhwUGAJkAhwUG
AMEAhwUVANEAhwUGAHEAkwYoAOEAWQYtAOkAhQQyAPEAjwM4AKEAzgM8ANkAqQZAAIEA0gZGAIEA
zgNLANkAqQZQAPkAwARXAAkBhwUQAAkBZwZgABEBAAE8ABkB9ABnACEB2ABsABEB7wEGAHkAyQEG
APEAmQN5AOEAwwYBAHEAhwUGAKEAhwUGADkBxgB+ADkB2gaHAKkAhwWNAMkAhwUGAAgAKACnAAgA
LACsACkAcwAXAS4ACwDvAC4AEwD4AC4AGwAXAS4AIwAgAS4AKwBJAS4AMwBJAS4AOwBJAS4AQwAg
AS4ASwBPAS4AUwBJAS4AWwBmAUMAYwCsAEkAcwAXAWMAawCsAAEBewCsABsAAwABAAQAAwAAAHcF
4AAAAI0B5QAAALsG6gACAAUAAwACAAYABQABAAcABQACAAgABwAEgAAAAQAAALogUiIAAAAAAAAB
AAAABAAAAAAAAAAAAAAAlQCDAAAAAAAOAAAAAAAAAAAAAACeANwDAAAAAAQAAAAAAAAAAAAAAJUA
0AQAAAAABAAAAAAAAAAAAAAAlQCoBAAAAAAOAAAAAAAAAAAAAACeAFwAAAAAAAQAAAAAAAAAAAAA
AJUAjgQAAAAAAAAAAAEAAADYBQAABQACAAAAAAAAU1RfOWMwNjI5NDA3ZThhNDg0MWFjNzVlODI2
ZjU3YzZkNjAAU1RfY2M2ZmQ5NzNlYjlhNDA1ZTliOGM1YTA5NTA1OWFjNjYAPE1vZHVsZT4AU3lz
dGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAGRl
ZmF1bHRJbnN0YW5jZQBaaXBBcmNoaXZlTW9kZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBDcmVhdGVFbnRyeUZyb21GaWxlAFppcEZpbGUAR2V0RmlsZU5hbWUA
Z2V0X0Z1bGxOYW1lAHByb2Nlc3NlZFppcE5hbWUAcHJhY3RpY2VTaG9ydE5hbWUAY3VycmVudERh
dGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2Rl
bEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBmaWxlRGF0ZQBFZGl0b3JCcm93
c2FibGVTdGF0ZQBEZWxldGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1
bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAWmlw
QXJjaGl2ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0
LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlw
dFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAENvbXByZXNzaW9u
TGV2ZWwAU1RfOWMwNjI5NDA3ZThhNDg0MWFjNzVlODI2ZjU3YzZkNjAuZGxsAGdldF9JdGVtAFN5
c3RlbS5JTy5Db21wcmVzc2lvbi5GaWxlU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3Jp
cHRNYWluAFN5c3RlbS5JTy5Db21wcmVzc2lvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxl
U3lzdGVtSW5mbwBEaXJlY3RvcnlJbmZvAHdvcmtpbmdfZm9sZGVyX3ByYWN0aWNlX2ZvbGRlcgBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2NjNmZkOTczZWI5
YTQwNWU5YjhjNWEwOTUwNTlhYzY2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF9jYzZmZDk3M2ViOWE0MDVlOWI4YzVhMDk1MDU5YWM2Ni5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MAWmlwRmlsZUV4dGVuc2lvbnMAU3VjY2Vz
cwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFz
a1Jlc3VsdABnZXRfTm93AGdldF9Bc3NlbWJseQBaaXBBcmNoaXZlRW50cnkAAABTJABQAHIAbwBq
AGUAYwB0ADoAOgBhAHoAdQByAGUAXwBmAGkAbABlAF8AcwBoAGEAcgBlAF8AYwBvAG4AdABhAGkA
bgBlAHIAXwBuAGEAbQBlAAADXAAAOyQAUAByAG8AagBlAGMAdAA6ADoAVwBvAHIAawBpAG4AZwBf
AEYAbwBsAGQAZQByAF8AUABhAHQAaAAAL1UAcwBlAHIAOgA6AFAAcgBhAGMAdABpAGMAZQBTAGgA
bwByAHQATgBhAG0AZQAAHVUAcwBlAHIAOgA6AEYAaQBsAGUARABhAHQAZQAAH3kAeQB5AHkATQBN
AGQAZABfAEgASABtAG0AcwBzAAADXwAAFV8AUAByAG8AYwBlAHMAcwBlAGQAAAkuAHoAaQBwAAAD
KgAABS4AKgAALVUAcwBlAHIAOgA6AFAAcgBvAGMAZQBzAHMAZQBkAFoAaQBwAE4AYQBtAGUAAAEA
cVMAVABfAGMAYwA2AGYAZAA5ADcAMwBlAGIAOQBhADQAMAA1AGUAOQBiADgAYwA1AGEAMAA5ADUA
MAA1ADkAYQBjADYANgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
AMpnGn46/b1IpSuQvN7f7/gABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0MBwUSPRFBHRJFCBJF
BCAAEnEEIAASdQUgARJ5HAMgABwDIAAOBQABDh0OBAAAEUEEIAEODgYAAw4ODg4IAAISPQ4RgIEG
IAEdEkUOBAABDg4MAAQSgJUSPQ4OEYCZBCABARwIAAESgJ0RgKEFIAASgKUHIAIBDhKApQi3elxW
GTTgiQiJhF3NgIDMkQQAAAAABAEAAAACBg4DBhJVAwYSWQMGEhACBggDBhEUAwAAAQQAABJVBAAA
ElkFAAEBElkEAAASEAQIABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfY2M2ZmQ5NzNlYjlhNDA1ZTliOGM1YTA5NTA1OWFj
NjYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAHDMAAAAAAAAAAAAANjMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgzAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAQBAAAAAAAAAAAAAAQBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAUiK6IAAAAQBSIrogPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEcAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAATAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBjAGMANgBmAGQAOQA3ADMAZQBiADkAYQA0ADAANQBlADkAYgA4AGMANQBhADAAOQA1
ADAANQA5AGEAYwA2ADYAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAAzADcAOAAuADgANwA4ADYAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADkAYwAwADYAMgA5ADQAMAA3AGUAOABhADQAOAA0ADEAYQBjADcANQBlADgAMgA2AGYANQA3AGMA
NgBkADYAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AOQBjADAANgAyADkANAAwADcAZQA4AGEANAA4ADQAMQBhAGMANwA1AGUAOAAyADYA
ZgA1ADcAYwA2AGQANgAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGMAYwA2AGYAZAA5ADcAMwBlAGIAOQBhADQAMAA1AGUAOQBiADgAYwA1AGEAMAA5ADUA
MAA1ADkAYQBjADYANgAAAEAADgABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOAAzADcAOAAuADgANwA4ADYAAABEAA4AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA4ADMANwA4AC4AOAA3ADgANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAASDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\DW Transfer"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{71005efb-f6ee-424a-a8ed-3a99322843cb}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="DW Transfer"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{589DF859-33AB-4C27-ACFA-92373364397D}"
                  SQLTask:SqlStatementSource="DECLARE @ETLBatchId INT = ?, @Practice_ShortName VARCHAR(15)  =?&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_Insurance', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_Insurance @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_Insurance';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_Provider', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_Provider @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_Provider';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_Office', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_Office @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_Office';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_Patient', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_Patient @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_Patient';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_AppointmentType', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_AppointmentType @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_AppointmentType';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_Metrics', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_Metrics @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_Metrics';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Fact_Appointment', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Fact_Appointment @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Fact_Appointment';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Fact_Metrics', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Fact_Metrics @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Fact_Metrics';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Fact_Insurance', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Fact_Insurance @ETLBatchId,@Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Fact_Insurance';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::ETLBatchId"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::PracticeShortName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Copy"
              DTS:CreationName="ExtensibleFileTask"
              DTS:Description="Flexible File Task"
              DTS:Disabled="True"
              DTS:DTSID="{2CC6093F-2B74-4AF2-A71C-3596C14DE8FC}"
              DTS:ExecutableType="ExtensibleFileTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Flexible File Copy"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="DestinationFolderPath">@[$Project::azure_archive_container_name]+"\\"+@[$Project::azure_archive_folder_path] +"\\"+ @[User::PracticeShortName]</DTS:PropertyExpression>
              <DTS:PropertyExpression
                DTS:Name="SourceFileName">@[User::ProcessedZipName]</DTS:PropertyExpression>
              <DTS:PropertyExpression
                DTS:Name="SourceFolderPath">@[$Project::azure_file_share_container_name]+"\\"+ @[$Project::Working_Folder_Path] +"\\"+ @[User::PracticeShortName]</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExtensibleFileTask
                  Operation="Copy"
                  SourceConnectionType="LocalFileSystem"
                  SourceFolderPath="F:\unzip\EMR"
                  SourceFileName="EMRPRAC1_20221130_Processed20221208_235354.zip"
                  SearchRecursively="False"
                  DestinationConnectionType="AzureStorage"
                  DestinationConnectionId="{7ACC443F-9A43-42E1-88A4-D5C5DD8B0BE3}"
                  DestinationFolderPath="emr-file-patient-load\archive\EMR"
                  ConnectionType="LocalFileSystem"
                  DeleteRecursively="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Delete"
              DTS:CreationName="ExtensibleFileTask"
              DTS:Description="Flexible File Task"
              DTS:Disabled="True"
              DTS:DTSID="{DE1B39F6-7EA1-4D9C-ABAC-1F2F94A9941C}"
              DTS:ExecutableType="ExtensibleFileTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Flexible File Delete"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="FileName">@[User::ProcessedZipName]</DTS:PropertyExpression>
              <DTS:PropertyExpression
                DTS:Name="FolderPath">@[$Project::azure_file_share_container_name]+"\\"+ @[$Project::Working_Folder_Path]+"\\"+ @[User::PracticeShortName]</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExtensibleFileTask
                  Operation="Delete"
                  SourceConnectionType="LocalFileSystem"
                  SearchRecursively="False"
                  DestinationConnectionType="LocalFileSystem"
                  ConnectionType="LocalFileSystem"
                  FolderPath="F:\unzip\EMR"
                  FileName="EMRPRAC1_20221130_Processed20221208_235354.zip"
                  DeleteRecursively="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Delete From Source"
              DTS:CreationName="ExtensibleFileTask"
              DTS:Description="Flexible File Task"
              DTS:Disabled="True"
              DTS:DTSID="{39B19475-CE74-48D4-83A6-E549B21FAD11}"
              DTS:ExecutableType="ExtensibleFileTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Flexible File Delete From Source"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="FileName">"*"+@[User::FileDate]+ @[$Project::azure_source_file_extension]</DTS:PropertyExpression>
              <DTS:PropertyExpression
                DTS:Name="FolderPath">@[$Project::azure_source_container_name] +"\\"+@[$Project::azure_source_folder_path] +"\\"+ @[User::PracticeShortName]</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExtensibleFileTask
                  Operation="Delete"
                  SourceConnectionType="LocalFileSystem"
                  SearchRecursively="False"
                  DestinationConnectionType="LocalFileSystem"
                  ConnectionType="AzureStorage"
                  ConnectionId="{7ACC443F-9A43-42E1-88A4-D5C5DD8B0BE3}"
                  FolderPath="emr-file-patient-load\source\EMR"
                  FileName="*20221106.csv"
                  DeleteRecursively="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Ods"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{f5f5d7b3-523d-4ce8-8216-b817316c5a5e}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Ods"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{6F0586C1-CB89-4B97-B214-41F7CF47793F}"
                  SQLTask:SqlStatementSource="DECLARE @ETLBatchId INT = ?, @ETLBatchTS DATETIME =?, @FileDate VARCHAR(10) =?&#xA;&#xA;EXEC dbo.up_EMRFile_ODS_Demographics @ETLBatchId, @ETLBatchTS, @FileDate;&#xA;EXEC dbo.up_EMRFile_ODS_Insurance @ETLBatchId, @ETLBatchTS, @FileDate;&#xA;EXEC dbo.up_EMRFile_ODS_LabResults @ETLBatchId, @ETLBatchTS, @FileDate;&#xA;EXEC dbo.up_EMRFile_ODS_Appointment @ETLBatchId, @ETLBatchTS, @FileDate;&#xA;&#xA;EXEC dbo.up_EMRFile_Calc_AppointmentType_i @ETLBatchId;&#xA;EXEC dbo.up_EMRFile_Calc_Insurance_i @ETLBatchId;&#xA;EXEC dbo.up_EMRFile_Calc_Office_i @ETLBatchId;&#xA;EXEC dbo.up_EMRFile_Calc_Provider_i @ETLBatchId;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::ETLBatchId"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::ETLBatchTS"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::FileDate"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\RCO Demographic"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{00840BDC-4515-4F06-8F18-9BC914DE88F9}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="RCO Demographic"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{751DA957-8217-4EC5-A82D-EF1C46A6E95B}"
                  SQLTask:SqlStatementSource="USE[RCOA_Demographics]&#xA;DECLARE @ETLBatchTS datetime = getdate();&#xA;DECLARE @ETLBatchID INT = ?&#xA;&#xA;SELECT&#xA;    Practice, Patient_BK, Patient_Key, First_Name, Last_Name, Date_Of_Death&#xA;&#x9;INTO #temp_Demographic_Result&#xA;FROM Dim_Patient  WHERE ETLBatchID = @ETLBatchID&#xA;----------------------------------------------------------------------------------------&#xA;CREATE NONCLUSTERED INDEX ix_tempPatientKey ON #temp_Demographic_Result (Patient_Key);&#xA;-------------------------------------------------------------------------------------------&#xA;&#xA;&#x9;INSERT INTO dbo.[Demographic_Result]&#xA;&#x9;  ([Demographic_Practice]&#xA;      ,[Patient_BK]&#xA;      ,[Patient_Key]&#xA;      ,[Date_Of_Death]&#xA;      ,[Patient_First_Name]&#xA;      ,[Patient_Last_Name]&#xA;      ,[CreatedOnDate])&#xA;&#x9;SELECT&#xA;&#x9;&#x9;TD.Practice,&#xA;&#x9;&#x9;TD.Patient_BK,&#xA;&#x9;&#x9;TD.Patient_Key,&#xA;&#x9;&#x9;TD.Date_Of_Death,&#xA;&#x9;&#x9;TD.First_Name,&#xA;&#x9;&#x9;TD.Last_Name,&#xA;&#x9;&#x9;@ETLBatchTS&#xA;&#x9;FROM #temp_Demographic_Result TD&#xA;&#x9;LEFT JOIN dbo.[Demographic_Result] T ON T.Patient_Key = TD.Patient_Key&#xA;&#x9;WHERE T.Patient_Key IS NULL;&#xA;&#x9;&#xA;UPDATE dbo.[Demographic_Result]&#xA;&#x9;SET&#xA;       [Patient_BK] = TD.Patient_BK&#xA;      ,[Date_Of_Death] = TD.Date_Of_Death&#xA;      ,[Patient_First_Name] = TD.First_Name&#xA;      ,[Patient_Last_Name] = TD.Last_Name&#xA;      ,[UpdatedOnDate] = @ETLBatchTS&#xA;&#x9;FROM dbo.[Demographic_Result] D&#xA;&#x9;INNER JOIN #temp_Demographic_Result TD  ON TD.Patient_Key = D.Patient_Key" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::ETLBatchId"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Stage"
              DTS:CreationName="Microsoft.ExecutePackageTask"
              DTS:Description="Execute Package Task"
              DTS:DTSID="{a8092ebc-bd8b-49bd-a461-55770a4acce2}"
              DTS:ExecutableType="Microsoft.ExecutePackageTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Stage"
              DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Stage.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{4af5b0e6-1f30-46a0-9a7a-4526a39b3644}"
                  DTS:EventID="0"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{2400d32f-34fd-4414-af52-a16230846407}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables>
                    <DTS:Executable
                      DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Stage.EventHandlers[OnError]\Log Error into ETLBatchError on Stage package failure"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Description="Execute SQL Task"
                      DTS:DTSID="{c07d8dbd-61f5-498f-b3dd-d2bb883af5ab}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Log Error into ETLBatchError on Stage package failure">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="SqlStatementSource">"insert into ETLBatchError values ("+ (DT_WSTR,12) @[User::ETLBatchId] +" , getdate(), '"+ replace(@[System::ErrorDescription],"'","") +"' )"</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{E80D7904-196A-4E1F-A34D-0B72700C2269}"
                          SQLTask:SqlStatementSource="insert into ETLBatchError values (95873 , getdate(), '' )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                      </DTS:ObjectData>
                    </DTS:Executable>
                  </DTS:Executables>
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <ExecutePackageTask>
                  <UseProjectReference>True</UseProjectReference>
                  <PackageName>Stage.dtsx</PackageName>
                </ExecutePackageTask>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Update Batch Entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3df7ab7a-5eb5-46b0-b400-f016f84c6871}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update Batch Entry"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{1AECDEB1-DE3D-43B4-B2FB-D8977A4BD016}"
                  SQLTask:SqlStatementSource="DECLARE @ETLBatchTS datetime = getdate();&#xA;DECLARE @BatchId INT =?&#xA;&#xA;UPDATE BatchLog SET &#xA;EndDateTime = @ETLBatchTS,&#xA;[Status]='C'&#xA;WHERE BatchLogId = @BatchId &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::ETLBatchId"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{71FDD4D7-2FFD-4235-92B3-11DC8C737066}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\Create Batch Entry"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\Stage" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{280AAAB0-0B9C-40E3-BAEC-640DAADB5D41}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\Stage"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\Ods" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{31057D84-F84B-4121-B86F-D4C065C11155}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\Ods"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\DW Transfer" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{C5C20202-93A3-4B72-BE5B-316DC449E2B9}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\DW Transfer"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\RCO Demographic" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{FFD93AEE-1B4F-4D13-8FCB-BA6341B37CA3}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\RCO Demographic"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\Update Batch Entry" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{03066F84-5E26-4A4D-9A83-54AAE7C6BE57}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\Update Batch Entry"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\Create Zip File" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{26B4AB35-CFE8-449E-B697-58593503C0EC}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\Create Zip File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Copy" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{573AD049-68C4-42C3-A575-159F45CE5516}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Copy"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Delete From Source" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{8903B7BA-2B93-4343-B06D-E4F068BD44F5}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Delete From Source"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Delete" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{2B481A91-3F59-4BB2-A727-FDAD3BC2E53D}"
              DTS:ObjectName="{2B481A91-3F59-4BB2-A727-FDAD3BC2E53D}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::FileDate" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Get List Of Dates"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{8a98df58-d54a-45de-a525-fd1c13858161}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get List Of Dates"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_2dcafe9914514de28d2652553500dea0"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::PracticeShortName,$Project::Working_Folder_Path,$Project::azure_file_share_container_name"
              ReadWriteVariables="User::DatesList">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f113f7570e64471d9213f3a0c6ff9daf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f113f7570e64471d9213f3a0c6ff9daf")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Settings.get_Default():ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Sett" +
    "ings")]

namespace ST_f113f7570e64471d9213f3a0c6ff9daf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Text.RegularExpressions;
using System.Collections.Generic;
#endregion

namespace ST_f113f7570e64471d9213f3a0c6ff9daf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        private static string working_practice_folder = @"";
        private static List<string> ListOfDates = new List<string>();
        private static string regExPattern;
       

        public void Main()
		{
            // TODO: Add your code here
            ListOfDates.Clear();
            working_practice_folder = Dts.Variables["$Project::azure_file_share_container_name"].Value.ToString() + "\\" + Dts.Variables["$Project::Working_Folder_Path"].Value.ToString() + "\\" + Dts.Variables["User::PracticeShortName"].Value.ToString();
            var directory = new DirectoryInfo(working_practice_folder);
         

            regExPattern = @"^(?:.*_)?([0-9]{8})(?:\..*)?$";
       
          
            FileInfo[] files = directory.GetFiles();

            foreach (FileInfo file in files)
            {
                
                    string result = Regex.Match(file.Name, @regExPattern).Groups[1].Value;
                    if ((!ListOfDates.Contains(result)) && result!="") 
                    {
                        ListOfDates.Add(result);
                    }               

            }
            if (ListOfDates != null)
            {
                ListOfDates.Sort();
            }
            
            Dts.Variables["User::DatesList"].Value = ListOfDates;
            Dts.TaskResult = (int)ScriptResults.Success;

        }
       
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_2dcafe9914514de28d2652553500dea0</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_2dcafe9914514de28d2652553500dea0</msb:DisplayName>
    <msb:ProjectId>{472D3EC1-9059-4D95-ACCD-5370B64F79D1}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_2dcafe9914514de28d2652553500dea0.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_2dcafe9914514de28d2652553500dea0.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{60A5CD1C-0F33-46E9-AA8E-52E1B3208631}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f113f7570e64471d9213f3a0c6ff9daf</RootNamespace>
    <AssemblyName>ST_2dcafe9914514de28d2652553500dea0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f113f7570e64471d9213f3a0c6ff9daf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_2dcafe9914514de28d2652553500dea0.dll">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
EABhAAEFEABpAAEFBgCRAAEFBgC5AAEFFQDJAAEFBgAMAM8EBgBxADoGKQDZANMFLgDhABIEMwDp
ABMDOQCZAGsDPQDRAFAGQQDxAAEFEADxAOEFRwD5AMsAPQABAXQDTQAJAScGVQARARIEWwAhARMD
PQAMAP8FYgDRAJEGaAAMAIoAbgAMAHkGBgDpAB0DdADZAGoGAQBxAAEFBgAMAAEFBgCZAAEFBgAp
AbkAeQApAYQGggChAAEFiADBAAEFBgAIACAAogAIACQApwApAHMAGQEuAAsA8QAuABMA+gAuABsA
GQEuACMAIgEuACsASwEuADMASwEuADsASwEuAEMAIgEuAEsAUQEuAFMASwEuAFsAaAFDAGMApwBJ
AHMAGQFjAGsApwDBAHsApwAbAAMAAQAEAAMAAADxBOIAAAAhAecAAABiBuwAAgAFAAMAAgAGAAUA
AQAHAAUAAgAIAAcAIwAEgAAAAQAAALoghhYAAAAAAAABAAAABAAAAAAAAAAAAAAAkABmAAAAAAAO
AAAAAAAAAAAAAACZAHoDAAAAAAQAAAAAAAAAAAAAAJAAGwQAAAAADgAAAAAAAAAAAAAAmQA/AAAA
AAAAAAAAAQAAAFIFAAAFAAIAAAAAU1RfMmRjYWZlOTkxNDUxNGRlMjhkMjY1MjU1MzUwMGRlYTAA
TGlzdGAxADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
dmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBZGQAZGVmYXVsdElu
c3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9O
YW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBDYXB0dXJlAFZTVEFSVFNjcmlwdE9iamVj
dE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTVF9mMTEzZjc1NzBlNjQ0NzFkOTIx
M2YzYTBjNmZmOWRhZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1hdGNoAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNr
cy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8y
ZGNhZmU5OTE0NTE0ZGUyOGQyNjUyNTUzNTAwZGVhMC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBHcm91cENvbGxlY3Rpb24AcmVnRXhQYXR0ZXJuAEZp
bGVJbmZvAEN1bHR1cmVJbmZvAEZpbGVTeXN0ZW1JbmZvAERpcmVjdG9yeUluZm8AR3JvdXAAQ2xl
YXIAd29ya2luZ19wcmFjdGljZV9mb2xkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0
b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lz
dGVtLlJlc291cmNlcwBTVF9mMTEzZjc1NzBlNjQ0NzFkOTIxM2YzYTBjNmZmOWRhZi5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZjExM2Y3NTcwZTY0NDcx
ZDkyMTNmM2EwYzZmZjlkYWYuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAExpc3RP
ZkRhdGVzAFNldHRpbmdzAENvbnRhaW5zAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBn
ZXRfR3JvdXBzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0
X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU29ydABSZWdleABnZXRfQXNzZW1ibHkAb3BfSW5lcXVh
bGl0eQAAAFMkAFAAcgBvAGoAZQBjAHQAOgA6AGEAegB1AHIAZQBfAGYAaQBsAGUAXwBzAGgAYQBy
AGUAXwBjAG8AbgB0AGEAaQBuAGUAcgBfAG4AYQBtAGUAAANcAAA7JABQAHIAbwBqAGUAYwB0ADoA
OgBXAG8AcgBrAGkAbgBnAF8ARgBvAGwAZABlAHIAXwBQAGEAdABoAAAvVQBzAGUAcgA6ADoAUABy
AGEAYwB0AGkAYwBlAFMAaABvAHIAdABOAGEAbQBlAAA7XgAoAD8AOgAuACoAXwApAD8AKABbADAA
LQA5AF0AewA4AH0AKQAoAD8AOgBcAC4ALgAqACkAPwAkAAEBAB9VAHMAZQByADoAOgBEAGEAdABl
AHMATABpAHMAdAAAcVMAVABfAGYAMQAxADMAZgA3ADUANwAwAGUANgA0ADQANwAxAGQAOQAyADEA
MwBmADMAYQAwAGMANgBmAGYAOQBkAGEAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAAAAAmec0kcoEnUq5Dbr51NkyJQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQER
WQcHAx0SQQgOBRUSPQEOBCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBQABDh0OBSAAHRJBBwACEoCF
Dg4FIAASgIkGIAESgI0IBSABAhMABQACAg4OBSABARMABCABARwIAAESgJURgJkFIAASgJ0HIAIB
DhKAnQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAACBg4GBhUSPQEOAwYSUQMGElUDBhIQAgYI
AwYRFAMAAAEEAAASUQQAABJVBQABARJVBAAAEhAECAASUQQIABJVBAgAEhAIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2YxMTNmNzU3MGU2NDQ3
MWQ5MjEzZjNhMGM2ZmY5ZGFmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEkBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFt
ZXdvcmsgNC41AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA2DEAAAAAAAAAAAAA8jEAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAOQxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAQBAAAAAAAAAAAAAAQBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAhha6IAAAAQCGFrogPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEcAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAATAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBmADEAMQAzAGYANwA1ADcAMABlADYANAA0ADcAMQBkADkAMgAxADMAZgAzAGEAMABj
ADYAZgBmADkAZABhAGYAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAAzADcAOAAuADUANwA2ADYAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADIAZABjAGEAZgBlADkAOQAxADQANQAxADQAZABlADIAOABkADIANgA1ADIANQA1ADMANQAwADAA
ZABlAGEAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AMgBkAGMAYQBmAGUAOQA5ADEANAA1ADEANABkAGUAMgA4AGQAMgA2ADUAMgA1ADUA
MwA1ADAAMABkAGUAYQAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGYAMQAxADMAZgA3ADUANwAwAGUANgA0ADQANwAxAGQAOQAyADEAMwBmADMAYQAwAGMA
NgBmAGYAOQBkAGEAZgAAAEAADgABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOAAzADcAOAAuADUANwA2ADYAAABEAA4AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA4ADMANwA4AC4ANQA3ADYANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAABDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Practice Comparison"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{c15f1b5b-6682-4676-8e05-729ac737ce85}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Practice Comparison"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"SELECT COUNT(Short_Name) FROM [dbo].[Dim_Practice] WHERE Short_Name = '"+ @[User::PracticeShortName] +"'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{589DF859-33AB-4C27-ACFA-92373364397D}"
              SQLTask:SqlStatementSource="SELECT COUNT(Short_Name) FROM [dbo].[Dim_Practice] WHERE Short_Name = 'EMR'"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::PracticeExists" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{9842E872-7530-4AF0-A250-C572319C63A6}"
          DTS:From="Package\Foreach Loop Container\Get List Of Dates"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Foreach Loop Container" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{074FF03B-A6B5-4AB6-9819-54488662EA6C}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::PracticeExists]  &gt; 0"
          DTS:From="Package\Foreach Loop Container\Practice Comparison"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Get List Of Dates" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{5D5ECF29-7D51-4312-9F7D-16C22BC15119}"
          DTS:ObjectName="{5D5ECF29-7D51-4312-9F7D-16C22BC15119}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::PracticeShortName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get List Of HJ Practice Folders"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{dbbf4191-ab72-4e27-91e1-598d92897cf0}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get List Of HJ Practice Folders"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_92e55bc0e1294b57be7e8e8b9f16e3f1"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::Working_Folder_Path,$Project::azure_file_share_container_name"
          ReadWriteVariables="User::FolderNames">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_868d560021614437b52d127e084006b7.Properties.Settings.get_Default():ST_868d560021614437b52d127e084006b7.Properties.Sett" +
    "ings")]

namespace ST_868d560021614437b52d127e084006b7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Linq;
#endregion

namespace ST_868d560021614437b52d127e084006b7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary> @[$Project::azure_file_share_container_name]+"\\"+@[$Project::Working_Folder_Path]
        private static string[] listOfFolders;
        private static string working_folder_path =@"";




        public void Main()
		{

            working_folder_path = Dts.Variables["$Project::azure_file_share_container_name"].Value.ToString()+"\\"+ Dts.Variables["$Project::Working_Folder_Path"].Value.ToString();
            listOfFolders = Directory.GetDirectories(working_folder_path);
            for(int i = 0; i < listOfFolders.Length; i++)
            {
                listOfFolders[i] = listOfFolders[i].Replace(working_folder_path + "\\", "");
            }

            Dts.Variables["User::FolderNames"].Value = listOfFolders;
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_92e55bc0e1294b57be7e8e8b9f16e3f1.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{72272A9E-6A80-4A2E-ADFA-0288596CEA6B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_868d560021614437b52d127e084006b7</RootNamespace>
    <AssemblyName>ST_92e55bc0e1294b57be7e8e8b9f16e3f1</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_92e55bc0e1294b57be7e8e8b9f16e3f1</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_92e55bc0e1294b57be7e8e8b9f16e3f1</msb:DisplayName>
    <msb:ProjectId>{015496EB-7CC2-4396-AFA7-2FC243AB35C4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_92e55bc0e1294b57be7e8e8b9f16e3f1.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_868d560021614437b52d127e084006b7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_868d560021614437b52d127e084006b7")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_868d560021614437b52d127e084006b7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_868d560021614437b52d127e084006b7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_868d560021614437b52d127e084006b7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_868d560021614437b52d127e084006b7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_868d560021614437b52d127e084006b7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_92e55bc0e1294b57be7e8e8b9f16e3f1.dll">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
LgBDAPcALgBLACYBLgBTACABLgBbAD0BQwBjAH8ASQBzAO4AYwBrAH8AoQB7AH8AGwADAAEABAAD
AAAAaQS3AAAAHgG8AAAArwXBAAIABQADAAIABgAFAAEABwAFAAIACAAHAASAAAABAAAAuiDPFQAA
AAAAAAEAAAAEAAAAAAAAAAAAAABoAIMAAAAAAA4AAAAAAAAAAAAAAHEAWQMAAAAABAAAAAAAAAAA
AAAAaAD6AwAAAAAOAAAAAAAAAAAAAABxAFwAAAAAAAAAAAABAAAAygQAAAUAAgAAAABTVF85MmU1
NWJjMGUxMjk0YjU3YmU3ZThlOGI5ZjE2ZTNmMQBTVF84NjhkNTYwMDIxNjE0NDM3YjUyZDEyN2Uw
ODQwMDZiNwA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRT
AHZhbHVlX18AbXNjb3JsaWIAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJl
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAHdvcmtpbmdfZm9sZGVyX3BhdGgATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzkyZTU1
YmMwZTEyOTRiNTdiZTdlOGU4YjlmMTZlM2YxLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNv
dXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfODY4ZDU2MDAyMTYxNDQzN2I1MmQxMjdlMDg0MDA2Yjcu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAEdldERpcmVjdG9y
aWVzAFNUXzg2OGQ1NjAwMjE2MTQ0MzdiNTJkMTI3ZTA4NDAwNmI3LlByb3BlcnRpZXMAZ2V0X1Zh
cmlhYmxlcwBTZXR0aW5ncwBsaXN0T2ZGb2xkZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1
bHRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5
AERpcmVjdG9yeQAAAAAAUyQAUAByAG8AagBlAGMAdAA6ADoAYQB6AHUAcgBlAF8AZgBpAGwAZQBf
AHMAaABhAHIAZQBfAGMAbwBuAHQAYQBpAG4AZQByAF8AbgBhAG0AZQAAA1wAADskAFAAcgBvAGoA
ZQBjAHQAOgA6AFcAbwByAGsAaQBuAGcAXwBGAG8AbABkAGUAcgBfAFAAYQB0AGgAAAEAI1UAcwBl
AHIAOgA6AEYAbwBsAGQAZQByAE4AYQBtAGUAcwAAcVMAVABfADgANgA4AGQANQA2ADAAMAAyADEA
NgAxADQANAAzADcAYgA1ADIAZAAxADIANwBlADAAOAA0ADAAMAA2AGIANwAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAHoY8xmfDYEmH+kk3KXmZSwAEIAEBCAMg
AAEFIAEBEREEIAEBDgUgAQERUQMHAQgEIAASYQQgABJlBSABEmkcAyAAHAMgAA4GAAMODg4OBQAB
HQ4OBQACDg4OBSACDg4OBCABARwGAAESdRF5BCAAEn0GIAIBDhJ9CLd6XFYZNOCJCImEXc2AgMyR
BAAAAAAEAQAAAAMGHQ4CBg4DBhJJAwYSTQMGEhACBggDBhEUAwAAAQQAABJJBAAAEk0FAAEBEk0E
AAASEAQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfODY4ZDU2MDAyMTYxNDQzN2I1MmQxMjdlMDg0MDA2YjcAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAIQv
AAAAAAAAAAAAAJ4vAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQLwAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABAEAAAAAAAAAAAAABAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDPFbogAAABAM8VuiA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABMAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADgANgA4AGQANQA2ADAAMAAyADEANgAxADQANAAzADcAYgA1ADIAZAAxADIANwBl
ADAAOAA0ADAAMAA2AGIANwAAADwADgABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADMANwA4AC4ANQA1ADgAMwAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AOQAyAGUANQA1AGIAYwAwAGUAMQAyADkANABiADUANwBiAGUANwBlADgAZQA4AGIAOQBmADEA
NgBlADMAZgAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA5ADIAZQA1ADUAYgBjADAAZQAxADIAOQA0AGIANQA3AGIAZQA3AGUAOABlADgA
YgA5AGYAMQA2AGUAMwBmADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AOAA2ADgAZAA1ADYAMAAwADIAMQA2ADEANAA0ADMANwBiADUAMgBkADEAMgA3AGUA
MAA4ADQAMAAwADYAYgA3AAAAQAAOAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA4ADMANwA4AC4ANQA1ADgAMwAAAEQADgABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADgAMwA3ADgALgA1ADUAOAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACwPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Number of Error Records"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{97e47ae8-6c66-48dc-9681-19a5a47962a3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Number of Error Records"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6F0586C1-CB89-4B97-B214-41F7CF47793F}"
          SQLTask:SqlStatementSource="select COUNT(*) from EMRFile_ErrorLog WHERE (Is_Resolved IS NULL OR Is_Resolved = 0)"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ErrorRecordCount" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send Email Notification for Error Records"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{2825f0fc-3f14-46ed-939e-cb4d1d484a2c}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send Email Notification for Error Records"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_e964c6e61ff542319c62b0faaadde928"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ErrorRecordCount,$Project::Error_Notification_From_EmailId,$Project::Error_Notification_Email_Subject,$Project::Error_Notification_Email_Password,$Project::Error_Notification_To_EmailId,$Project::SMTP_Host,$Project::SMTP_Port">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Settings.get_Default():ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Sett" +
    "ings")]

namespace ST_43d0f4a3d5994daaa1715683bbe891b9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Net;
#endregion

namespace ST_43d0f4a3d5994daaa1715683bbe891b9
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls12;
            string fromEmailId = Dts.Variables["$Project::Error_Notification_From_EmailId"].Value.ToString();
            string toEmailId = Dts.Variables["$Project::Error_Notification_To_EmailId"].Value.ToString();
            string subject = Dts.Variables["$Project::Error_Notification_Email_Subject"].Value.ToString();
            string password = Dts.Variables["$Project::Error_Notification_Email_Password"].Value.ToString();
            string smtpHost = Dts.Variables["$Project::SMTP_Host"].Value.ToString();
            int smtpPort = Convert.ToInt32(Dts.Variables["$Project::SMTP_Port"].Value);
            //string fileType = Dts.Variables["User::FileType"].Value.ToString();
            string errorRecordCount = Dts.Variables["User::ErrorRecordCount"].Value.ToString();

            MailMessage mailMessage = new MailMessage();
            mailMessage.From = new MailAddress(fromEmailId);
            mailMessage.To.Add(new MailAddress(toEmailId.Trim()));
            mailMessage.Body = "Total number of unresolved error records from 'EMR Report File Patient Load' : " + errorRecordCount;
            mailMessage.IsBodyHtml = false;
            mailMessage.Subject = subject;
           // string host = "smtp.office365.com";
           // int port = 587;
            SmtpClient smtpClient = new SmtpClient(smtpHost, smtpPort);
            smtpClient.EnableSsl = true;

            smtpClient.DeliveryMethod = SmtpDeliveryMethod.Network;
            smtpClient.UseDefaultCredentials = false;
            smtpClient.Credentials = new NetworkCredential(fromEmailId, password);
            smtpClient.Send(mailMessage);
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_e964c6e61ff542319c62b0faaadde928.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a13263fb-71d6-48d2-a417-d55790df229f}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_43d0f4a3d5994daaa1715683bbe891b9</RootNamespace>
    <AssemblyName>ST_e964c6e61ff542319c62b0faaadde928</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e964c6e61ff542319c62b0faaadde928</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e964c6e61ff542319c62b0faaadde928</msb:DisplayName>
    <msb:ProjectId>{36776EDE-C573-4CC4-BE5C-B1251FC90E91}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_e964c6e61ff542319c62b0faaadde928.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_43d0f4a3d5994daaa1715683bbe891b9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_43d0f4a3d5994daaa1715683bbe891b9")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_43d0f4a3d5994daaa1715683bbe891b9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_e964c6e61ff542319c62b0faaadde928.dll">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
EABRAFsFEABZAFsFEABhAFsFEABpAFsFBgCJAFsFBgCxAFsFFQDBAFsFBgDJAHEEJgBxAIIGLADZ
AC0GMQDhAJQENgDpAFYDPACRAIADQADxAA4ARAB5AFsFBgD5AFsFEAB5AKkESQB5ACAFTwAJAaQE
QAAMAJcAXQAJAZgGYwB5AP4GEAB5AGIEaQB5AKYGEAAZAVsFbgAZAYYEaQAZAaAAdAAZAVQGaQAp
AVsFewAZAUQGgQAZAZsAiADZAMkGAQBxAFsFBgCRAFsFBgA5Af0AjgA5AQcHlwCZAFsFnQC5AFsF
BgAIABQAtwAIABgAvAApAHMAJAEuAAsA/AAuABMABQEuABsAJAEuACMALQEuACsAVgEuADMAVgEu
ADsAVgEuAEMALQEuAEsAXAEuAFMAVgEuAFsAcwFDAGMAvABJAHMAJAFhAHsAvABjAGsAvAAbAAMA
AQAEAAMAAAA3Be0AAABsAfIAAADBBvcAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAVQAEgAAAAQAA
ALggAicAAAAAAAAWAAAABAAAAAAAAAAAAAAApQCOAAAAAAAOAAAAAAAAAAAAAACuAIkDAAAAAAQA
AAAAAAAAAAAAAKUAnQQAAAAADgAAAAAAAAAAAAAArgBnAAAAAAAAAAAAAQAAAKwFAAAFAAIAAAAA
Q29sbGVjdGlvbmAxAFRvSW50MzIAU1RfZTk2NGM2ZTYxZmY1NDIzMTljNjJiMGZhYWFkZGU5MjgA
U1RfNDNkMGY0YTNkNTk5NGRhYWExNzE1NjgzYmJlODkxYjkAPE1vZHVsZT4ATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAQWRkAFNlbmQAc2V0X0RlbGl2ZXJ5
TWV0aG9kAFNtdHBEZWxpdmVyeU1ldGhvZABkZWZhdWx0SW5zdGFuY2UATWFpbE1lc3NhZ2UAVmFy
aWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBTZWN1cml0eVByb3RvY29sVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdl
dF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2RlbABT
Y3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNU
X2U5NjRjNmU2MWZmNTQyMzE5YzYyYjBmYWFhZGRlOTI4LmRsbABzZXRfSXNCb2R5SHRtbABzZXRf
U2VjdXJpdHlQcm90b2NvbABzZXRfRW5hYmxlU3NsAGdldF9JdGVtAFN5c3RlbQBUcmltAHNldF9G
cm9tAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24A
Z2V0X1RvAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIAU2VydmljZVBvaW50TWFuYWdl
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF80M2QwZjRhM2Q1OTk0ZGFhYTE3MTU2ODNiYmU4
OTFiOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNDNk
MGY0YTNkNTk5NGRhYWExNzE1NjgzYmJlODkxYjkuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzAHNldF9DcmVkZW50aWFscwBzZXRfVXNlRGVmYXVsdENyZWRlbnRpYWxzAFN1Y2Nlc3MA
TWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAc2V0X1N1Ympl
Y3QAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AENvbnZl
cnQASUNyZWRlbnRpYWxzQnlIb3N0AHNldF9Cb2R5AGdldF9Bc3NlbWJseQAAUyQAUAByAG8AagBl
AGMAdAA6ADoARQByAHIAbwByAF8ATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AXwBGAHIAbwBtAF8A
RQBtAGEAaQBsAEkAZAAATyQAUAByAG8AagBlAGMAdAA6ADoARQByAHIAbwByAF8ATgBvAHQAaQBm
AGkAYwBhAHQAaQBvAG4AXwBUAG8AXwBFAG0AYQBpAGwASQBkAABVJABQAHIAbwBqAGUAYwB0ADoA
OgBFAHIAcgBvAHIAXwBOAG8AdABpAGYAaQBjAGEAdABpAG8AbgBfAEUAbQBhAGkAbABfAFMAdQBi
AGoAZQBjAHQAAFckAFAAcgBvAGoAZQBjAHQAOgA6AEUAcgByAG8AcgBfAE4AbwB0AGkAZgBpAGMA
YQB0AGkAbwBuAF8ARQBtAGEAaQBsAF8AUABhAHMAcwB3AG8AcgBkAAAnJABQAHIAbwBqAGUAYwB0
ADoAOgBTAE0AVABQAF8ASABvAHMAdAAAJyQAUAByAG8AagBlAGMAdAA6ADoAUwBNAFQAUABfAFAA
bwByAHQAAC1VAHMAZQByADoAOgBFAHIAcgBvAHIAUgBlAGMAbwByAGQAQwBvAHUAbgB0AACAn1QA
bwB0AGEAbAAgAG4AdQBtAGIAZQByACAAbwBmACAAdQBuAHIAZQBzAG8AbAB2AGUAZAAgAGUAcgBy
AG8AcgAgAHIAZQBjAG8AcgBkAHMAIABmAHIAbwBtACAAJwBFAE0AUgAgAFIAZQBwAG8AcgB0ACAA
RgBpAGwAZQAgAFAAYQB0AGkAZQBuAHQAIABMAG8AYQBkACcAIAA6ACAAAXFTAFQAXwA0ADMAZAAw
AGYANABhADMAZAA1ADkAOQA0AGQAYQBhAGEAMQA3ADEANQA2ADgAMwBiAGIAZQA4ADkAMQBiADkA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAGuhqbpyRQtCki49ajdD
ExgABCABAQgDIAABBSABARERBCABAQ4FIAEBEVUKBwcODg4OCA4SPQUAAQERaQQgABJtBCAAEnEF
IAESdRwDIAAcAyAADgQAAQgcBSABARJ9BSAAEoCBBxUSgIkBEn0FIAEBEwAFAAIODg4EIAEBAgUg
AgEOCAYgAQERgJEFIAIBDg4GIAEBEoCZBSABARI9CAABEoCdEYChBSAAEoClByACAQ4SgKUIt3pc
Vhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSTQMGElEDBhIQAgYIAwYRFAQAABJNBAAAElEFAAEB
ElEEAAASEAMAAAEECAASTQQIABJRBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzQzZDBmNGEzZDU5OTRkYWFhMTcxNTY4M2JiZTg5MWI5
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAAAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAMgzAAAAAAAAAAAAAOIzAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUMwAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAQBAAAAAAAAAAAAAAQBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAie4IAAAAQACJ7ggPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEcAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAATAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA0ADMAZAAwAGYANABhADMAZAA1ADkAOQA0AGQAYQBhAGEAMQA3ADEANQA2ADgAMwBi
AGIAZQA4ADkAMQBiADkAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAAzADcANgAuADkAOQA4ADYAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
AGUAOQA2ADQAYwA2AGUANgAxAGYAZgA1ADQAMgAzADEAOQBjADYAMgBiADAAZgBhAGEAYQBkAGQA
ZQA5ADIAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AZQA5ADYANABjADYAZQA2ADEAZgBmADUANAAyADMAMQA5AGMANgAyAGIAMABmAGEA
YQBhAGQAZABlADkAMgA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfADQAMwBkADAAZgA0AGEAMwBkADUAOQA5ADQAZABhAGEAYQAxADcAMQA1ADYAOAAzAGIA
YgBlADgAOQAxAGIAOQAAAEAADgABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOAAzADcANgAuADkAOQA4ADYAAABEAA4AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA4ADMANwA2AC4AOQA5ADgANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA9DMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{56172141-80cc-4539-85e9-92bd578e809c}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::ErrorRecordCount]  &gt; 0"
      DTS:From="Package\Get Number of Error Records"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Send Email Notification for Error Records" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{CFDEF005-DB09-47E3-B402-A9394EBC9A2C}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get Number of Error Records" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{A60DDB4E-E432-4EF3-82FB-EEEC7097D4E8}"
      DTS:From="Package\Flexible file download"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Get List Of HJ Practice Folders" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{703AD9C2-A37D-43EC-8408-62A6128DD57E}"
      DTS:From="Package\Get List Of HJ Practice Folders"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{BE18EA27-3F51-4B32-8565-FC00C97FB641}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{2A3B5BE2-D9EB-461B-A183-A09E88E4BF27}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log Error into ETLBatchError on Main package failure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4bc21df3-edf7-46e2-9671-2b8700d04ead}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Error into ETLBatchError on Main package failure">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"insert into ETLBatchError values ("+ (DT_WSTR,12) @[User::ETLBatchId] +" , getdate(), '"+ replace(@[System::ErrorDescription],"'","") +"' )"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1AECDEB1-DE3D-43B4-B2FB-D8977A4BD016}"
              SQLTask:SqlStatementSource="insert into ETLBatchError values (95873 , getdate(), '' )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="162,42"
          Id="Package\Flexible file download"
          TopLeft="233.166666666667,0.166666666666664" />
        <NodeLayout
          Size="172,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Create Batch Entry"
          TopLeft="55.5,6.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\DW Transfer"
          TopLeft="68,314.5" />
        <NodeLayout
          Size="166,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Copy"
          TopLeft="51,686" />
        <NodeLayout
          Size="239,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Delete From Source"
          TopLeft="27,780" />
        <NodeLayout
          Size="99,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Ods"
          TopLeft="86,206.5" />
        <NodeLayout
          Size="172,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\RCO Demographic"
          TopLeft="56.5000000000001,418.5" />
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Create Zip File"
          TopLeft="73,584" />
        <NodeLayout
          Size="108,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Stage"
          TopLeft="84.5,104.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Update Batch Entry"
          TopLeft="63.3666666666667,516.933333333334" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="140,48.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="137,146.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="137,248.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66"
              Start="0,0"
              End="0,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="140.5,356.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="141.533333333333,460.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56.8333333333336"
              Start="0,0"
              End="0,49.3333333333336">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.3333333333336" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="140.366666666667,558.933333333334">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.1333333333333,25.066666666666"
              Start="0,0"
              End="8.1333333333333,17.566666666666">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.53333333333302" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.53333333333302"
                    Point2="0,12.533333333333"
                    Point3="4,12.533333333333" />
                  <mssgle:LineSegment
                    End="4.1333333333333,12.533333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="4.1333333333333,12.533333333333"
                    Point2="8.1333333333333,12.533333333333"
                    Point3="8.1333333333333,16.533333333333" />
                  <mssgle:LineSegment
                    End="8.1333333333333,17.566666666666" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="148.5,626">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.5,60"
              Start="0,0"
              End="-14.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-10.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-10.5,30"
                    Point2="-14.5,30"
                    Point3="-14.5,34" />
                  <mssgle:LineSegment
                    End="-14.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="134,728">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.5,52"
              Start="0,0"
              End="12.5,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22"
                    Point2="0,26"
                    Point3="4,26" />
                  <mssgle:LineSegment
                    End="8.5,26" />
                  <mssgle:CubicBezierSegment
                    Point1="8.5,26"
                    Point2="12.5,26"
                    Point3="12.5,30" />
                  <mssgle:LineSegment
                    End="12.5,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="173,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Flexible File Delete"
          TopLeft="62,865" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          TopLeft="147.5,822">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="318,961"
          Size="318,1004"
          Id="Package\Foreach Loop Container\Foreach Loop Container"
          TopLeft="38.5000000000001,148.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Get List Of Dates"
          TopLeft="100.5,83.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach Loop Container\Practice Comparison"
          TopLeft="108.6,14.8" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="182,125.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15.5000000000001,23"
              Start="0,0"
              End="15.5000000000001,15.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.5"
                    Point2="0,11.5"
                    Point3="4,11.5" />
                  <mssgle:LineSegment
                    End="11.5000000000001,11.5" />
                  <mssgle:CubicBezierSegment
                    Point1="11.5000000000001,11.5"
                    Point2="15.5000000000001,11.5"
                    Point3="15.5000000000001,15.5" />
                  <mssgle:LineSegment
                    End="15.5000000000001,15.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="185.35,56.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.1"
              Start="0,0"
              End="0,19.6">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.6" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.8,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="393,1208"
          Size="393,1250"
          Id="Package\Foreach Loop Container"
          TopLeft="129.5,187" />
        <NodeLayout
          Size="230,42"
          Id="Package\Get List Of HJ Practice Folders"
          TopLeft="198.5,82" />
        <NodeLayout
          Size="222,42"
          Id="Package\Get Number of Error Records"
          TopLeft="202.166666666667,1475.83333333333" />
        <NodeLayout
          Size="280,42"
          Id="Package\Send Email Notification for Error Records"
          TopLeft="184.833333333333,1571" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="313.166666666667,1517.83333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="11.6666666666661,53.1666666666699"
              Start="0,0"
              End="11.6666666666661,45.6666666666699">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.583333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.583333333335"
                    Point2="0,26.583333333335"
                    Point3="4,26.583333333335" />
                  <mssgle:LineSegment
                    End="7.66666666666606,26.583333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="7.66666666666606,26.583333333335"
                    Point2="11.6666666666661,26.583333333335"
                    Point3="11.6666666666661,30.583333333335" />
                  <mssgle:LineSegment
                    End="11.6666666666661,45.6666666666699" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-2.16666666666697,31.583333333335,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="326,1437">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.833333333333,38.8333333333301"
              Start="0,0"
              End="-12.833333333333,31.3333333333301">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.416666666665" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.416666666665"
                    Point2="0,19.416666666665"
                    Point3="-4,19.416666666665" />
                  <mssgle:LineSegment
                    End="-8.83333333333303,19.416666666665" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.83333333333303,19.416666666665"
                    Point2="-12.833333333333,19.416666666665"
                    Point3="-12.833333333333,23.416666666665" />
                  <mssgle:LineSegment
                    End="-12.833333333333,31.3333333333301" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="314.033333333333,41.7666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.2333333333333"
              Start="0,0"
              End="0,32.7333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.7333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="313.5,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.5,63"
              Start="0,0"
              End="12.5,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.5"
                    Point2="0,31.5"
                    Point3="4,31.5" />
                  <mssgle:LineSegment
                    End="8.5,31.5" />
                  <mssgle:CubicBezierSegment
                    Point1="8.5,31.5"
                    Point2="12.5,31.5"
                    Point3="12.5,35.5" />
                  <mssgle:LineSegment
                    End="12.5,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Log Error into ETLBatchError on Main package failure"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container\Foreach Loop Container\Stage.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="345,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Stage.EventHandlers[OnError]\Log Error into ETLBatchError on Stage package failure"
          TopLeft="358,113" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>