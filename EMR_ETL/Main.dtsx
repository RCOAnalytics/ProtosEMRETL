<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/23/2022 10:20:57 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PH-DEV-30"
  DTS:CreatorName="GNS\Smerukar"
  DTS:DTSID="{65DFD136-7A7A-4825-8104-362ABDF77F15}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.521.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="90"
  DTS:VersionGUID="{23B9B6C7-67C8-4EC0-BE37-49E1160EEA88}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Azure Storage Connection]"
      DTS:CreationName="AzureStorage"
      DTS:DTSID="{7ACC443F-9A43-42E1-88A4-D5C5DD8B0BE3}"
      DTS:ObjectName="Azure Storage Connection">
      <DTS:PropertyExpression
        DTS:Name="AccountName">@[$Project::azure_account_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="SasToken">@[$Project::azure_sas_token]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <AzureStorageConnectionManager
          ConnectionString="AuthType=SharedAccessSignature;SasResourcePath=;AccountName=bause1devrawmtv;DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;"
          ConnectByProxy="False">
          <SasToken
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAl4xK9Owf+kyWI/YUg85NtwAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADbwZQBKLQuAYkjm4Z9kY2DAAAAAASAAACgAAAAEAAAAK3e2DTasJzxuIBCumUpDEQ4AQAARHPWwdzPF3lr7b28SXRdsWNBsxJIfmIqI7DTEzwKcZFntyuSRS0MTBNqm/I9Nt46WvLnpT0ueAPw9m2QaMmbPYfLIopVR2gSGhHj1zdf72Pp1cnnnAEZ785X1ADQRi3H/PY7hmelxFmZW0hBSensKkV2F6oPAomQ0hqqKdCgFtRkrGYc0ckSVUSnuxj0Db55JhNneT8rMXL5CZr5tBC15g+uW/8Yq0cUgUKwLdfHH053yxqqkH0hBV+fo+xEed8CmZrQCIGR853BUN+adsgm6Y3brg0DQ3+ubBzq75clB514APnWYLHzx0VtduzyN5xqZWGt9XqIgC6m/W412wzKuWBt22EvqSHF65DhptFA+a7T32RTi0pmQlc0ZOEjRcrrJslT9/yeHtGsO9R4aaxrKDoczvJIqnImFAAAAI06ZNSAyKbhuDlHHHcUyhbpIPfl</SasToken>
        </AzureStorageConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LoggingDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1AECDEB1-DE3D-43B4-B2FB-D8977A4BD016}"
      DTS:ObjectName="LoggingDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::loggingdb_db_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::db_password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::db_server_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::db_username]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=ba-use1-sandbox-ass-data.database.windows.net;User ID=SMore;Initial Catalog=LoggingDB;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAl4xK9Owf+kyWI/YUg85NtwAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACqon/ash3r9fukXbBoEi38AAAAAASAAACgAAAAEAAAAHMTKKkcyAdooM6C4zg7IBIYAAAAZArBtacqNG+ywVGTSIPZdfyAGEiTQBckFAAAAOAo9VaxSF8qDBwo4zSQCRkaCAid</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RCO_Demographic]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{751DA957-8217-4EC5-A82D-EF1C46A6E95B}"
      DTS:ObjectName="RCO_Demographic">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::rcoa_demographics_db_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::db_password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::db_server_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::db_username]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=ba-use1-sandbox-ass-data.database.windows.net;User ID=SMore;Initial Catalog=RCOA_Demographics;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAl4xK9Owf+kyWI/YUg85NtwAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACavt60YsHxuwO6ily+V9QlAAAAAASAAACgAAAAEAAAAMO3EffHeQp6Tt9gqeEh+f0YAAAATfaHvaH5qNBzI8Bsbpn5lPQKO0jF7vjmFAAAADb8uIYS4FGagR3atAaTEQo9oOPH</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RCO_DW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{589DF859-33AB-4C27-ACFA-92373364397D}"
      DTS:ObjectName="RCO_DW">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::rco_dw_db_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::db_password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::db_server_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::db_username]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=ba-use1-sandbox-ass-data.database.windows.net;User ID=SMore;Initial Catalog=rco_dw;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAl4xK9Owf+kyWI/YUg85NtwAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAp5dGoUEuHteb3T44acJIiAAAAAASAAACgAAAAEAAAAO/cp19Il0Du0j+gidVDDfQYAAAAC5aeK/36C9cHCuu1Nb3XnpM62e/2f9IyFAAAAFMH8EXzLD6QxFPkFOXF11CRgxv9</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RCO_Ods DB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6F0586C1-CB89-4B97-B214-41F7CF47793F}"
      DTS:ObjectName="RCO_Ods DB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::rco_ods_db_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::db_password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::db_server_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::db_username]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=ba-use1-sandbox-ass-data.database.windows.net;User ID=SMore;Initial Catalog=rco_ods;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAl4xK9Owf+kyWI/YUg85NtwAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAA36KD1mKeXzfQT196GGNoNAAAAAASAAACgAAAAEAAAAK/412IiHwtzLR/2W2N5FvgYAAAAalrlkkOsq5xItmMKTsNGKCbmyxukJueVFAAAAC5jOKsNWHpAgghdFyMSGW3xmL7U</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{099F7BC9-E88F-4298-A311-CAEC927E5427}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DatesList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{501FEABC-260B-4CCB-85F9-CB89EEE3AD6E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorRecordCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{48C38E9D-8E43-4E8A-8B73-DE2330888096}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ETLBatchId">
      <DTS:VariableValue
        DTS:DataType="3">95873</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{42C002A4-C508-4600-923C-72BAB0F4E27F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ETLBatchTS">
      <DTS:VariableValue
        DTS:DataType="7">12/2/2022 9:48:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{62D40A17-00D9-4D13-9766-838C982883B9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileDate">
      <DTS:VariableValue
        DTS:DataType="8">20221106</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{98989FCA-E239-41B0-B174-477C7EF1DE60}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FolderNames">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19234B0A-95D3-44DB-B06F-FEE4C79E46D6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PracticeExists">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38F20E0D-1ABA-468D-8F98-46B778BFA89C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PracticeShortName">
      <DTS:VariableValue
        DTS:DataType="8">EMR</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Flexible file download"
      DTS:CreationName="ExtensibleFileTask"
      DTS:Description="Flexible file download"
      DTS:DTSID="{84FFED4E-B9B3-40E8-86D0-DA1070F66102}"
      DTS:ExecutableType="ExtensibleFileTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Flexible file download"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="DestinationFolderPath">@[$Project::Working_Folder]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="SourceFileName">@[$Project::azure_source_file_name]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="SourceFolderPath">@[$Project::azure_source_container_name]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ExtensibleFileTask
          Operation="Copy"
          SourceConnectionType="AzureStorage"
          SourceConnectionId="{7ACC443F-9A43-42E1-88A4-D5C5DD8B0BE3}"
          SourceFolderPath="emr-file-patient-load/source"
          SourceFileName="*.csv"
          SearchRecursively="True"
          DestinationConnectionType="LocalFileSystem"
          DestinationFolderPath="F:\unzip"
          ConnectionType="LocalFileSystem"
          DeleteRecursively="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{0578D9A2-4E5C-4CA3-A08D-C4538F6F97B2}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
        DTS:DTSID="{3B1C023B-B9A3-410E-944A-2BC37180904E}"
        DTS:ObjectName="{3B1C023B-B9A3-410E-944A-2BC37180904E}">
        <DTS:ObjectData>
          <FEEFVE
            VariableName="User::FolderNames" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Flexible File Copy"
          DTS:CreationName="ExtensibleFileTask"
          DTS:Description="Flexible File Task"
          DTS:DTSID="{2CC6093F-2B74-4AF2-A71C-3596C14DE8FC}"
          DTS:ExecutableType="ExtensibleFileTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Flexible File Copy"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="DestinationFolderPath">"emr-file-patient-load/archieve/" + @[User::PracticeShortName]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SourceFileName">"*"+ @[User::FileDate] + ".csv"</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SourceFolderPath">"emr-file-patient-load/source/" +  @[User::PracticeShortName]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ExtensibleFileTask
              Operation="Copy"
              SourceConnectionType="AzureStorage"
              SourceConnectionId="{7ACC443F-9A43-42E1-88A4-D5C5DD8B0BE3}"
              SourceFolderPath="emr-file-patient-load/source/EMR"
              SourceFileName="*20221106.csv"
              SearchRecursively="False"
              DestinationConnectionType="AzureStorage"
              DestinationConnectionId="{7ACC443F-9A43-42E1-88A4-D5C5DD8B0BE3}"
              DestinationFolderPath="emr-file-patient-load/archieve/EMR"
              ConnectionType="LocalFileSystem"
              DeleteRecursively="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Flexible File Delete"
          DTS:CreationName="ExtensibleFileTask"
          DTS:Description="Flexible File Task"
          DTS:DTSID="{39B19475-CE74-48D4-83A6-E549B21FAD11}"
          DTS:ExecutableType="ExtensibleFileTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Flexible File Delete"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="FileName">"*" +  @[User::FileDate] + ".csv"</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="FolderPath">"emr-file-patient-load/source/" +  @[User::PracticeShortName]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ExtensibleFileTask
              Operation="Delete"
              SourceConnectionType="LocalFileSystem"
              SearchRecursively="False"
              DestinationConnectionType="LocalFileSystem"
              ConnectionType="AzureStorage"
              ConnectionId="{7ACC443F-9A43-42E1-88A4-D5C5DD8B0BE3}"
              FolderPath="emr-file-patient-load/source/EMR"
              FileName="*20221106.csv"
              DeleteRecursively="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{E494FC5B-99F3-46CA-A99C-1064AFEE9ADC}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
            DTS:DTSID="{1A35A19C-12CD-48B0-B046-0DB3B1A35BD6}"
            DTS:ObjectName="{1A35A19C-12CD-48B0-B046-0DB3B1A35BD6}">
            <DTS:ObjectData>
              <FEEFVE
                VariableName="User::DatesList" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Create Batch Entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Add records to batch log table"
              DTS:DTSID="{127413a1-ddfc-4a37-b708-3cb0ba737c0a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Batch Entry"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{1AECDEB1-DE3D-43B4-B2FB-D8977A4BD016}"
                  SQLTask:SqlStatementSource="DECLARE @ETLBatchTS datetime = getdate();&#xA;DECLARE @PracticeName VARCHAR(20) =?&#xA;DECLARE @FileDate VARCHAR(20) =?&#xA;&#xA;&#xA;&#xA;INSERT INTO BatchLog&#xA;(StartDateTime, [Status], [Source], [FileName])&#xA;SELECT @ETLBatchTS, 'S', @PracticeName,@FileDate;&#xA;SELECT @@IDENTITY AS 'ETLBatchID', @ETLBatchTS AS 'ETLBatchTS'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="ETLBatchID"
                    SQLTask:DtsVariableName="User::ETLBatchId" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="ETLBatchTS"
                    SQLTask:DtsVariableName="User::ETLBatchTS" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::PracticeShortName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::FileDate"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\DW Transfer"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{71005efb-f6ee-424a-a8ed-3a99322843cb}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="DW Transfer"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{589DF859-33AB-4C27-ACFA-92373364397D}"
                  SQLTask:SqlStatementSource="DECLARE @ETLBatchId INT = ?, @Practice_ShortName VARCHAR(15)  =?&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_Insurance', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_Insurance @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_Insurance';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_Provider', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_Provider @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_Provider';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_Office', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_Office @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_Office';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_Patient', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_Patient @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_Patient';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_AppointmentType', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_AppointmentType @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_AppointmentType';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Dim_Metrics', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Dim_Metrics @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Dim_Metrics';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Fact_Appointment', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Fact_Appointment @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Fact_Appointment';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Fact_Metrics', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Fact_Metrics @ETLBatchId, @Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Fact_Metrics';&#xA;&#xA;INSERT INTO dbo.[Audit_EMRFiles_to_DW] SELECT @ETLBatchId, 'EMRFile_DW_Fact_Insurance', getdate(), NULL&#xA;EXEC dbo.EMRFile_DW_Fact_Insurance @ETLBatchId,@Practice_ShortName;&#xA;UPDATE dbo.[Audit_EMRFiles_to_DW] SET EndTime = getdate() WHERE ETLBatchId = @ETLBatchId AND ProcCalled = 'EMRFile_DW_Fact_Insurance';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::ETLBatchId"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::PracticeShortName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Ods"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{f5f5d7b3-523d-4ce8-8216-b817316c5a5e}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Ods"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{6F0586C1-CB89-4B97-B214-41F7CF47793F}"
                  SQLTask:SqlStatementSource="DECLARE @ETLBatchId INT = ?, @ETLBatchTS DATETIME =?, @FileDate VARCHAR(10) =?&#xA;&#xA;EXEC dbo.up_EMRFile_ODS_Demographics @ETLBatchId, @ETLBatchTS, @FileDate;&#xA;EXEC dbo.up_EMRFile_ODS_Insurance @ETLBatchId, @ETLBatchTS, @FileDate;&#xA;EXEC dbo.up_EMRFile_ODS_LabResults @ETLBatchId, @ETLBatchTS, @FileDate;&#xA;EXEC dbo.up_EMRFile_ODS_Appointment @ETLBatchId, @ETLBatchTS, @FileDate;&#xA;&#xA;EXEC dbo.up_EMRFile_Calc_AppointmentType_i @ETLBatchId;&#xA;EXEC dbo.up_EMRFile_Calc_Insurance_i @ETLBatchId;&#xA;EXEC dbo.up_EMRFile_Calc_Office_i @ETLBatchId;&#xA;EXEC dbo.up_EMRFile_Calc_Provider_i @ETLBatchId;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::ETLBatchId"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::ETLBatchTS"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::FileDate"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\RCO Demographic"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{00840BDC-4515-4F06-8F18-9BC914DE88F9}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="RCO Demographic"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{751DA957-8217-4EC5-A82D-EF1C46A6E95B}"
                  SQLTask:SqlStatementSource="USE[RCOA_Demographics]&#xA;DECLARE @ETLBatchTS datetime = getdate();&#xA;DECLARE @ETLBatchID INT = ?&#xA;&#xA;SELECT&#xA;    Practice, Patient_BK, Patient_Key, First_Name, Last_Name, Date_Of_Death&#xA;&#x9;INTO #temp_Demographic_Result&#xA;FROM Dim_Patient  WHERE ETLBatchID = @ETLBatchID&#xA;----------------------------------------------------------------------------------------&#xA;CREATE NONCLUSTERED INDEX ix_tempPatientKey ON #temp_Demographic_Result (Patient_Key);&#xA;-------------------------------------------------------------------------------------------&#xA;&#xA;&#x9;INSERT INTO dbo.[Demographic_Result]&#xA;&#x9;  ([Demographic_Practice]&#xA;      ,[Patient_BK]&#xA;      ,[Patient_Key]&#xA;      ,[Date_Of_Death]&#xA;      ,[Patient_First_Name]&#xA;      ,[Patient_Last_Name]&#xA;      ,[CreatedOnDate])&#xA;&#x9;SELECT&#xA;&#x9;&#x9;TD.Practice,&#xA;&#x9;&#x9;TD.Patient_BK,&#xA;&#x9;&#x9;TD.Patient_Key,&#xA;&#x9;&#x9;TD.Date_Of_Death,&#xA;&#x9;&#x9;TD.First_Name,&#xA;&#x9;&#x9;TD.Last_Name,&#xA;&#x9;&#x9;@ETLBatchTS&#xA;&#x9;FROM #temp_Demographic_Result TD&#xA;&#x9;LEFT JOIN dbo.[Demographic_Result] T ON T.Patient_Key = TD.Patient_Key&#xA;&#x9;WHERE T.Patient_Key IS NULL;&#xA;&#x9;&#xA;UPDATE dbo.[Demographic_Result]&#xA;&#x9;SET&#xA;       [Patient_BK] = TD.Patient_BK&#xA;      ,[Date_Of_Death] = TD.Date_Of_Death&#xA;      ,[Patient_First_Name] = TD.First_Name&#xA;      ,[Patient_Last_Name] = TD.Last_Name&#xA;      ,[UpdatedOnDate] = @ETLBatchTS&#xA;&#x9;FROM dbo.[Demographic_Result] D&#xA;&#x9;INNER JOIN #temp_Demographic_Result TD  ON TD.Patient_Key = TD.Patient_Key" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::ETLBatchId"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Stage"
              DTS:CreationName="Microsoft.ExecutePackageTask"
              DTS:Description="Execute Package Task"
              DTS:DTSID="{a8092ebc-bd8b-49bd-a461-55770a4acce2}"
              DTS:ExecutableType="Microsoft.ExecutePackageTask"
              DTS:FailParentOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Stage"
              DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Stage.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{4af5b0e6-1f30-46a0-9a7a-4526a39b3644}"
                  DTS:EventID="0"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{2400d32f-34fd-4414-af52-a16230846407}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables>
                    <DTS:Executable
                      DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Stage.EventHandlers[OnError]\Log Error into ETLBatchError on Stage package failure"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Description="Execute SQL Task"
                      DTS:DTSID="{c07d8dbd-61f5-498f-b3dd-d2bb883af5ab}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Log Error into ETLBatchError on Stage package failure">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="SqlStatementSource">"insert into ETLBatchError values ("+ (DT_WSTR,12) @[User::ETLBatchId] +" , getdate(), '"+ replace(@[System::ErrorDescription],"'","") +"' )"</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{E80D7904-196A-4E1F-A34D-0B72700C2269}"
                          SQLTask:SqlStatementSource="insert into ETLBatchError values (95873 , getdate(), '' )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                      </DTS:ObjectData>
                    </DTS:Executable>
                  </DTS:Executables>
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <ExecutePackageTask>
                  <UseProjectReference>True</UseProjectReference>
                  <PackageName>Stage.dtsx</PackageName>
                </ExecutePackageTask>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container\Update Batch Entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3df7ab7a-5eb5-46b0-b400-f016f84c6871}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update Batch Entry"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{1AECDEB1-DE3D-43B4-B2FB-D8977A4BD016}"
                  SQLTask:SqlStatementSource="DECLARE @ETLBatchTS datetime = getdate();&#xA;DECLARE @BatchId INT =?&#xA;&#xA;UPDATE BatchLog SET &#xA;EndDateTime = @ETLBatchTS,&#xA;[Status]='C'&#xA;WHERE BatchLogId = @BatchId " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::ETLBatchId"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{71FDD4D7-2FFD-4235-92B3-11DC8C737066}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\Create Batch Entry"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\Stage" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{280AAAB0-0B9C-40E3-BAEC-640DAADB5D41}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\Stage"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\Ods" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{31057D84-F84B-4121-B86F-D4C065C11155}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\Ods"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\DW Transfer" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{C5C20202-93A3-4B72-BE5B-316DC449E2B9}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\DW Transfer"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\RCO Demographic" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{FFD93AEE-1B4F-4D13-8FCB-BA6341B37CA3}"
              DTS:From="Package\Foreach Loop Container\Foreach Loop Container\RCO Demographic"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Foreach Loop Container\Foreach Loop Container\Update Batch Entry" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{2B481A91-3F59-4BB2-A727-FDAD3BC2E53D}"
              DTS:ObjectName="{2B481A91-3F59-4BB2-A727-FDAD3BC2E53D}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::FileDate" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Get List Of Dates"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{8a98df58-d54a-45de-a525-fd1c13858161}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get List Of Dates"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_2dcafe9914514de28d2652553500dea0"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::PracticeShortName,$Project::Working_Folder"
              ReadWriteVariables="User::DatesList">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f113f7570e64471d9213f3a0c6ff9daf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f113f7570e64471d9213f3a0c6ff9daf")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Settings.get_Default():ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Sett" +
    "ings")]

namespace ST_f113f7570e64471d9213f3a0c6ff9daf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Text.RegularExpressions;
using System.Collections.Generic;
#endregion

namespace ST_f113f7570e64471d9213f3a0c6ff9daf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        private static string Zip_Practice_Folder;
        private static List<string> ListOfDates = new List<string>();
        private static string regExPattern;
       

        public void Main()
		{
            // TODO: Add your code here
           
            Zip_Practice_Folder = Dts.Variables["$Project::Working_Folder"].Value.ToString() + "\\" + Dts.Variables["User::PracticeShortName"].Value.ToString();
            var directory = new DirectoryInfo(Zip_Practice_Folder);
         

            regExPattern = @"^(?:.*_)?([0-9]{8})(?:\..*)?$";
       
          
            FileInfo[] files = directory.GetFiles();

            foreach (FileInfo file in files)
            {
                
                    string result = Regex.Match(file.Name, @regExPattern).Groups[1].Value;
                    if ((!ListOfDates.Contains(result)) && result!="") 
                    {
                        ListOfDates.Add(result);
                    }               

            }
            if (ListOfDates != null)
            {
                ListOfDates.Sort();
            }
            
            Dts.Variables["User::DatesList"].Value = ListOfDates;
            Dts.TaskResult = (int)ScriptResults.Success;

        }
       
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_2dcafe9914514de28d2652553500dea0</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_2dcafe9914514de28d2652553500dea0</msb:DisplayName>
    <msb:ProjectId>{15408FBD-1883-40BA-BB64-ECC0F69DE731}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_2dcafe9914514de28d2652553500dea0.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_2dcafe9914514de28d2652553500dea0.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{60a5cd1c-0f33-46e9-aa8e-52e1b3208631}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f113f7570e64471d9213f3a0c6ff9daf</RootNamespace>
    <AssemblyName>ST_2dcafe9914514de28d2652553500dea0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f113f7570e64471d9213f3a0c6ff9daf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f113f7570e64471d9213f3a0c6ff9daf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_2dcafe9914514de28d2652553500dea0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIn6hmMAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAARjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPQwAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAATBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAo
MQAAAAAAAEgAAAACAAUAyCEAAHQOAAABAAAAAAAAADwwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBAD6AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAApyMwAAcAIoEAAACm8RAAAKcjcAAHBvEgAACm8TAAAKbxQAAAooFQAACoABAAAEfgEA
AARzFgAACnJnAABwgAMAAARvFwAACgoWCytMBgeabxgAAAp+AwAABCgZAAAKbxoAAAoXbxsAAApv
HAAACgx+AgAABAhvHQAACi0YCHKjAABwKB4AAAosC34CAAAECG8fAAAKBxdYCwcGjmkyrn4CAAAE
LAp+AgAABG8gAAAKAigQAAAKbxEAAApypQAAcG8SAAAKfgIAAARvIQAACgIoEAAAChZvIgAACioe
AigjAAAKKi5zJAAACoACAAAEKh4CKCUAAAoqrn4EAAAELR5yxQAAcNADAAACKCYAAApvJwAACnMo
AAAKgAQAAAR+BAAABCoafgUAAAQqHgKABQAABCoafgYAAAQqHgIoKQAACioucwkAAAaABgAABCpC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAB0BAAAI34AAOAEAACYBgAAI1N0cmlu
Z3MAAAAAeAsAADgBAAAjVVMAsAwAABAAAAAjR1VJRAAAAMAMAAC0AQAAI0Jsb2IAAAAAAAAAAgAA
AVcdogkJAwAAAPoBMwAWAAABAAAAJwAAAAUAAAAJAAAACgAAAAEAAAApAAAAAgAAABAAAAABAAAA
AgAAAAMAAAAEAAAAAQAAAAEAAAAEAAAAAQAAAAEAAAAAAOoDAQAAAAAABgBmAhcFBgD1AhcFBgCy
AQQFDwCLBQAABgDfAWgEBgBJAmgEBgAqAmgEBgDcAmgEBgCGAmgEBgCfAmgEBgD2AWgEBgARAlED
CgC6ApkDCgAxAZkDBgAlAG8ABgCXBDUABgAiBBsEBgCVAQQFBgBNBhsEBgDnBDcFBgCgBFMEDgBl
AdQDDgDGAdQDDgBNAT4EBgB6ARcFCgDCA5kDEgDNBdQAEgCeANQABgBtAxsEBgC7BDUABgCsBDUA
DgB0Bv4FDgB0A/4FDgB6BP4FDgDJBP4FDgApAf4FBgD0ABsEBgCnABsEBgB+BmgEAAAAACwAAAAA
AAEAAQABABAAMwQtAzkAAQABAAAAEAA+BZoFTQAEAAQAAAEQAOwFmgVhAAYACAADAQAAOAYAAEUA
BwALABEAzwStABEA4AWwABEAigStABEAJwS3ABEAGQG7ABEAjgC/AAYGXgDDAFaAKAbGAFaA+QDG
AFAgAAAAAIYAOQQGAAEAViEAAAAAhhj3BAYAAQBeIQAAAACRGP0EygABAGohAAAAAIMY9wQGAAEA
ciEAAAAAkwjjBM4AAQCeIQAAAACTCAEB0wABAKUhAAAAAJMIDQHYAAEArSEAAAAAlghUBt4AAgC0
IQAAAACGGPcEBgACALwhAAAAAJEY/QTKAAIAAAABACcDCQD3BAEAEQD3BAYAGQD3BAoAKQD3BBAA
MQD3BBAAOQD3BBAAQQD3BBAASQD3BBAAUQD3BBAAWQD3BBAAYQD3BBAAaQD3BAYAkQD3BAYAuQD3
BBUAyQD3BAYAcQAwBiMA0QDJBSgA2QASBC0A4QATAzMAmQBrAzcA6QBGBjsA8QD3BBAA8QDXBUIA
+QDLADcAAQF0A0gACQEdBlAAEQESBFYAIQETAzcADAD1BWMA6QCHBmkADACKAG8ADABvBgYA4QAd
A3UA0QBgBgEAcQD3BAYADAD3BAYAmQD3BAYAKQG5AHoAKQF6BoMAoQD3BIkAwQD3BAYACAAgAKMA
CAAkAKgAKQBzABoBLgALAPIALgATAPsALgAbABoBLgAjACMBLgArAEwBLgAzAEwBLgA7AEwBLgBD
ACMBLgBLAFIBLgBTAEwBLgBbAGkBQwBjAKgASQBzABoBYwBrAKgAwQB7AKgAGwADAAEABAADAAAA
5wTjAAAAIQHoAAAAWAbtAAIABQADAAIABgAFAAEABwAFAAIACAAHAF0ABIAAAAEAAACwIEymAAAA
AAAAAQAAAAQAAAAAAAAAAAAAAJEAZgAAAAAADgAAAAAAAAAAAAAAmgB6AwAAAAAEAAAAAAAAAAAA
AACRABsEAAAAAA4AAAAAAAAAAAAAAJoAPwAAAAAAAAAAAAEAAABIBQAABQACAAAAAAAAU1RfMmRj
YWZlOTkxNDUxNGRlMjhkMjY1MjU1MzUwMGRlYTAATGlzdGAxADxNb2R1bGU+AFN5c3RlbS5JTwBN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29s
bGVjdGlvbnMuR2VuZXJpYwBBZGQAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9OYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBDYXB0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1
ZQB2YWx1ZQBTVF9mMTEzZjc1NzBlNjQ0NzFkOTIxM2YzYTBjNmZmOWRhZgBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1hdGNoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFz
awBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1v
ZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8yZGNhZmU5OTE0NTE0ZGUyOGQyNjUyNTUzNTAw
ZGVhMC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBH
cm91cENvbGxlY3Rpb24AcmVnRXhQYXR0ZXJuAEZpbGVJbmZvAEN1bHR1cmVJbmZvAEZpbGVTeXN0
ZW1JbmZvAERpcmVjdG9yeUluZm8AR3JvdXAAWmlwX1ByYWN0aWNlX0ZvbGRlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2YxMTNmNzU3MGU2NDQ3MWQ5MjEz
ZjNhMGM2ZmY5ZGFmLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTVF9mMTEzZjc1NzBlNjQ0NzFkOTIxM2YzYTBjNmZmOWRhZi5Qcm9wZXJ0aWVzAGdldF9WYXJp
YWJsZXMAR2V0RmlsZXMATGlzdE9mRGF0ZXMAU2V0dGluZ3MAQ29udGFpbnMAU3lzdGVtLlRleHQu
UmVndWxhckV4cHJlc3Npb25zAGdldF9Hcm91cHMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTb3J0AFJlZ2V4AGdl
dF9Bc3NlbWJseQBvcF9JbmVxdWFsaXR5AAAAAAAxJABQAHIAbwBqAGUAYwB0ADoAOgBXAG8AcgBr
AGkAbgBnAF8ARgBvAGwAZABlAHIAAANcAAAvVQBzAGUAcgA6ADoAUAByAGEAYwB0AGkAYwBlAFMA
aABvAHIAdABOAGEAbQBlAAA7XgAoAD8AOgAuACoAXwApAD8AKABbADAALQA5AF0AewA4AH0AKQAo
AD8AOgBcAC4ALgAqACkAPwAkAAEBAB9VAHMAZQByADoAOgBEAGEAdABlAHMATABpAHMAdAAAcVMA
VABfAGYAMQAxADMAZgA3ADUANwAwAGUANgA0ADQANwAxAGQAOQAyADEAMwBmADMAYQAwAGMANgBm
AGYAOQBkAGEAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAPpD
ml4RNv9Olm+cHGBpTOgABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkHBwMdEkEIDgQgABJpBCAA
Em0FIAEScRwDIAAcAyAADgYAAw4ODg4FIAAdEkEHAAISgIUODgUgABKAiQYgARKAjQgFFRI9AQ4F
IAECEwAFAAICDg4FIAEBEwAEIAEBHAgAARKAlRGAmQUgABKAnQcgAgEOEoCdCLd6XFYZNOCJCImE
Xc2AgMyRBAAAAAAEAQAAAAIGDgYGFRI9AQ4DBhJRAwYSVQMGEhACBggDBhEUAwAAAQQAABJRBAAA
ElUFAAEBElUEAAASEAQIABJRBAgAElUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZjExM2Y3NTcwZTY0NDcxZDkyMTNmM2EwYzZmZjlk
YWYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAABwxAAAAAAAAAAAAADYxAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoMQAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAEymsCAAAAEATKawID8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AZgAxADEAMwBmADcANQA3ADAAZQA2ADQANAA3ADEAZAA5ADIAMQAzAGYAMwBhADAA
YwA2AGYAZgA5AGQAYQBmAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAMwA2ADgALgA0ADIANQA3ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMgBkAGMAYQBmAGUAOQA5ADEANAA1ADEANABkAGUAMgA4AGQAMgA2ADUAMgA1ADUAMwA1
ADAAMABkAGUAYQAwAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAyAGQAYwBhAGYAZQA5ADkAMQA0ADUAMQA0AGQAZQAyADgAZAAyADYANQAy
ADUANQAzADUAMAAwAGQAZQBhADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AZgAxADEAMwBmADcANQA3ADAAZQA2ADQANAA3ADEAZAA5ADIAMQAzAGYAMwBh
ADAAYwA2AGYAZgA5AGQAYQBmAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA4ADMANgA4AC4ANAAyADUANwAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADMANgA4AC4ANAAyADUANwAyAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAEgxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Practice Comparison"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{c15f1b5b-6682-4676-8e05-729ac737ce85}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Practice Comparison"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"SELECT COUNT(Short_Name) FROM [dbo].[Dim_Practice] WHERE Short_Name = '"+ @[User::PracticeShortName] +"'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{589DF859-33AB-4C27-ACFA-92373364397D}"
              SQLTask:SqlStatementSource="SELECT COUNT(Short_Name) FROM [dbo].[Dim_Practice] WHERE Short_Name = 'EMR'"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="PracticeCount"
                SQLTask:DtsVariableName="User::PracticeExists" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{9842E872-7530-4AF0-A250-C572319C63A6}"
          DTS:From="Package\Foreach Loop Container\Get List Of Dates"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Foreach Loop Container" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{074FF03B-A6B5-4AB6-9819-54488662EA6C}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::PracticeExists]  &gt; 0"
          DTS:From="Package\Foreach Loop Container\Practice Comparison"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Get List Of Dates" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{97D2F2A0-EEF4-400A-B5E7-944B6924BC03}"
          DTS:From="Package\Foreach Loop Container\Flexible File Copy"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Flexible File Delete" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{62A98508-89DD-4497-81A1-4952D94E3862}"
          DTS:From="Package\Foreach Loop Container\Foreach Loop Container"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Flexible File Copy" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{5D5ECF29-7D51-4312-9F7D-16C22BC15119}"
          DTS:ObjectName="{5D5ECF29-7D51-4312-9F7D-16C22BC15119}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::PracticeShortName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get List Of HJ Practice Folders"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{dbbf4191-ab72-4e27-91e1-598d92897cf0}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get List Of HJ Practice Folders"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_92e55bc0e1294b57be7e8e8b9f16e3f1"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::Working_Folder"
          ReadWriteVariables="User::FolderNames">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_868d560021614437b52d127e084006b7.Properties.Settings.get_Default():ST_868d560021614437b52d127e084006b7.Properties.Sett" +
    "ings")]

namespace ST_868d560021614437b52d127e084006b7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Linq;
#endregion

namespace ST_868d560021614437b52d127e084006b7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        private static string[] ListOfFolders;
        private static string Working_Folder_Path;




        public void Main()
		{

            Working_Folder_Path = Dts.Variables["$Project::Working_Folder"].Value.ToString();
            ListOfFolders = Directory.GetDirectories(Working_Folder_Path);
            for(int i = 0; i < ListOfFolders.Length; i++)
            {
                ListOfFolders[i] = ListOfFolders[i].Replace(Working_Folder_Path + "\\", "");
            }

            Dts.Variables["User::FolderNames"].Value = ListOfFolders;


            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_92e55bc0e1294b57be7e8e8b9f16e3f1.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{72272A9E-6A80-4A2E-ADFA-0288596CEA6B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_868d560021614437b52d127e084006b7</RootNamespace>
    <AssemblyName>ST_92e55bc0e1294b57be7e8e8b9f16e3f1</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_92e55bc0e1294b57be7e8e8b9f16e3f1</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_92e55bc0e1294b57be7e8e8b9f16e3f1</msb:DisplayName>
    <msb:ProjectId>{09CEA6CE-6C6C-4C64-9978-1FFAD4D73950}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_92e55bc0e1294b57be7e8e8b9f16e3f1.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_868d560021614437b52d127e084006b7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_868d560021614437b52d127e084006b7")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_868d560021614437b52d127e084006b7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_868d560021614437b52d127e084006b7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_868d560021614437b52d127e084006b7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_868d560021614437b52d127e084006b7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_868d560021614437b52d127e084006b7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_92e55bc0e1294b57be7e8e8b9f16e3f1.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALT1hmMAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAA/i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKwuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
LgAAAAAAAEgAAAACAAUAXCEAAJgMAAABAAAAAAAAAPQtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQCYAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAqAAgAABH4CAAAEKBUAAAqAAQAABBYKKyt+AQAABAZ+AQAABAaafgIAAARyMwAAcCgW
AAAKcjcAAHBvFwAACqIGF1gKBn4BAAAEjmkyywIoEAAACm8RAAAKcjkAAHBvEgAACn4BAAAEbxgA
AAoCKBAAAAoWbxkAAAoqHgIoGgAACioeAigbAAAKKq5+AwAABC0ecl0AAHDQAwAAAigcAAAKbx0A
AApzHgAACoADAAAEfgMAAAQqGn4EAAAEKh4CgAQAAAQqGn4FAAAEKh4CKB8AAAoqLnMIAAAGgAUA
AAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADsAwAAI34AAFgEAADgBQAA
I1N0cmluZ3MAAAAAOAoAANAAAAAjVVMACAsAABAAAAAjR1VJRAAAABgLAACAAQAAI0Jsb2IAAAAA
AAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAHwAAAAUAAAAIAAAACQAAAAEAAAAfAAAAAgAAABAA
AAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAyQMBAAAAAAAGAFsCmQQGAOoCmQQG
AKcBhgQPAA0FAAAGANQBRwQGAD4CRwQGAB8CRwQGANECRwQGAHsCRwQGAJQCRwQGAOsBRwQGAAYC
IgMKAK8CeAMKACYBeAMGAAEE+gMGAIoBhgQGAKQF+gMGAGkEuQQGAFkEMgQOAFoBswMOALsBswMO
AEIBHQQGAG8BmQQKAKEDeAMSAF4F0QASAKQA0QAGANMFUgAGAD4D+gMGAPEA+gMGAK0A+gMGAMoF
RwQAAAAASQAAAAAAAQABAAEAEAASBCUAOQABAAEAAAAQAMAEKwVFAAMAAwAAARAAaAUrBVkABQAH
AAMBAACPBQAAPQAGAAoAEQBxBX0AEQBFA4EAEQAGBIQAEQAWAYgAEQCUAIwABgZ7AJAAVoB/BZMA
VoD2AJMAUCAAAAAAhgAYBAYAAQD0IAAAAACGGHkEBgABAPwgAAAAAIMYeQQGAAEABCEAAAAAkwhl
BJcAAQAwIQAAAACTCP4AnAABADchAAAAAJMICgGhAAEAPyEAAAAAlgirBacAAgBGIQAAAACGGHkE
BgACAE4hAAAAAJEYfwSsAAIAAAABABwDCQB5BAEAEQB5BAYAGQB5BAoAKQB5BBAAMQB5BBAAOQB5
BBAAQQB5BBAASQB5BBAAUQB5BBAAWQB5BBAAYQB5BBAAaQB5BAYAgQB5BAYAqQB5BBUAuQB5BAYA
cQCHBR8AwQBaBSQAyQDxAykA0QAIAy8AiQA8AzMA2QAcBTcA4QCdBT0A4QCMAEMA0QASA0kAwQC3
BQEAcQB5BAYAiQB5BAYA6QC/AE4A6QDGBVUAkQB5BFoAsQB5BAYACAAcAHMACAAgAHgAKQBzAOcA
LgALAL8ALgATAMgALgAbAOcALgAjAPAALgArABkBLgAzABkBLgA7ABkBLgBDAPAALgBLAB8BLgBT
ABkBLgBbADYBQwBjAHgASQBzAOcAYwBrAHgAoQB7AHgAGwADAAEABAADAAAAaQSwAAAAHgG1AAAA
rwW6AAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAsCDiowAAAAAAAAEAAAAEAAAAAAAA
AAAAAABhAIMAAAAAAA4AAAAAAAAAAAAAAGoAWQMAAAAABAAAAAAAAAAAAAAAYQD6AwAAAAAOAAAA
AAAAAAAAAABqAFwAAAAAAAAAAAABAAAAygQAAAUAAgAAAABTVF85MmU1NWJjMGUxMjk0YjU3YmU3
ZThlOGI5ZjE2ZTNmMQBTVF84NjhkNTYwMDIxNjE0NDM3YjUyZDEyN2UwODQwMDZiNwA8TW9kdWxl
PgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3Js
aWIAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9i
amVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFRvU3RyaW5nAFdvcmtpbmdfRm9sZGVyX1BhdGgATWljcm9zb2Z0LlNxbFNlcnZlci5T
Y3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0
T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzkyZTU1YmMwZTEyOTRiNTdiZTdl
OGU4YjlmMTZlM2YxLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRN
YWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfODY4ZDU2MDAyMTYxNDQzN2I1MmQxMjdlMDg0MDA2YjcuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAEdldERpcmVjdG9yaWVzAFNUXzg2OGQ1NjAw
MjE2MTQ0MzdiNTJkMTI3ZTA4NDAwNmI3LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5n
cwBMaXN0T2ZGb2xkZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmpl
Y3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AERpcmVjdG9yeQAAAAAA
MSQAUAByAG8AagBlAGMAdAA6ADoAVwBvAHIAawBpAG4AZwBfAEYAbwBsAGQAZQByAAADXAAAAQAj
VQBzAGUAcgA6ADoARgBvAGwAZABlAHIATgBhAG0AZQBzAABxUwBUAF8AOAA2ADgAZAA1ADYAMAAw
ADIAMQA2ADEANAA0ADMANwBiADUAMgBkADEAMgA3AGUAMAA4ADQAMAAwADYAYgA3AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA+kNX4NHPjU6iUHpnIsm6bgAEIAEB
CAMgAAEFIAEBEREEIAEBDgUgAQERUQMHAQgEIAASYQQgABJlBSABEmkcAyAAHAMgAA4FAAEdDg4F
AAIODg4FIAIODg4EIAEBHAYAARJ1EXkEIAASfQYgAgEOEn0It3pcVhk04IkIiYRdzYCAzJEEAAAA
AAQBAAAAAwYdDgIGDgMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAAB
BAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTVF84NjhkNTYwMDIxNjE0NDM3YjUyZDEyN2UwODQwMDZiNwAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDIyAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADOyu++AQAAAJEAAABsU3lz
dGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5S
ZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADULgAAAAAA
AAAAAADuLgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4C4AAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDio7AgAAABAOKjsCA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADgANgA4AGQANQA2ADAAMAAyADEANgAxADQANAAzADcAYgA1ADIAZAAxADIANwBl
ADAAOAA0ADAAMAA2AGIANwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADMANgA4AC4ANAAxADkANQA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADkAMgBlADUANQBiAGMAMABlADEAMgA5ADQAYgA1ADcAYgBlADcAZQA4AGUAOABiADkA
ZgAxADYAZQAzAGYAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AOQAyAGUANQA1AGIAYwAwAGUAMQAyADkANABiADUANwBiAGUANwBlADgA
ZQA4AGIAOQBmADEANgBlADMAZgAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADgANgA4AGQANQA2ADAAMAAyADEANgAxADQANAAzADcAYgA1ADIAZAAxADIA
NwBlADAAOAA0ADAAMAA2AGIANwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOAAzADYAOAAuADQAMQA5ADUANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAAzADYAOAAuADQAMQA5ADUANAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAAPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Number of Error Records"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{97e47ae8-6c66-48dc-9681-19a5a47962a3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Number of Error Records"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6F0586C1-CB89-4B97-B214-41F7CF47793F}"
          SQLTask:SqlStatementSource="select COUNT(*) from EMRFile_ErrorLog WHERE (Is_Resolved IS NULL OR Is_Resolved = 0)"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ErrorRecordCount" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send Email Notification for Error Records"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{2825f0fc-3f14-46ed-939e-cb4d1d484a2c}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send Email Notification for Error Records"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_e964c6e61ff542319c62b0faaadde928"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ErrorRecordCount,$Project::Error_Notification_From_EmailId,$Project::Error_Notification_Email_Subject,$Project::Error_Notification_Email_Password,$Project::Error_Notification_To_EmailId,$Project::SMTP_Host,$Project::SMTP_Port">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Net;
#endregion

namespace ST_43d0f4a3d5994daaa1715683bbe891b9
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls12;
            string fromEmailId = Dts.Variables["$Project::Error_Notification_From_EmailId"].Value.ToString();
            string toEmailId = Dts.Variables["$Project::Error_Notification_To_EmailId"].Value.ToString();
            string subject = Dts.Variables["$Project::Error_Notification_Email_Subject"].Value.ToString();
            string password = Dts.Variables["$Project::Error_Notification_Email_Password"].Value.ToString();
            string smtpHost = Dts.Variables["$Project::SMTP_Host"].Value.ToString();
            int smtpPort = Convert.ToInt32(Dts.Variables["$Project::SMTP_Port"].Value);
            //string fileType = Dts.Variables["User::FileType"].Value.ToString();
            string errorRecordCount = Dts.Variables["User::ErrorRecordCount"].Value.ToString();

            MailMessage mailMessage = new MailMessage();
            mailMessage.From = new MailAddress(fromEmailId);
            mailMessage.To.Add(new MailAddress(toEmailId.Trim()));
            mailMessage.Body = "Number of Unresolved Error Records from EMR Report File Patient Load : " + errorRecordCount;
            mailMessage.IsBodyHtml = false;
            mailMessage.Subject = subject;
           // string host = "smtp.office365.com";
           // int port = 587;
            SmtpClient smtpClient = new SmtpClient(smtpHost, smtpPort);
            smtpClient.EnableSsl = true;

            smtpClient.DeliveryMethod = SmtpDeliveryMethod.Network;
            smtpClient.UseDefaultCredentials = false;
            smtpClient.Credentials = new NetworkCredential(fromEmailId, password);
            smtpClient.Send(mailMessage);
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_e964c6e61ff542319c62b0faaadde928.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a13263fb-71d6-48d2-a417-d55790df229f}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_43d0f4a3d5994daaa1715683bbe891b9</RootNamespace>
    <AssemblyName>ST_e964c6e61ff542319c62b0faaadde928</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_e964c6e61ff542319c62b0faaadde928</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_e964c6e61ff542319c62b0faaadde928</msb:DisplayName>
    <msb:ProjectId>{01F1D379-9C2C-4531-AB27-C5336F4198F9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_e964c6e61ff542319c62b0faaadde928.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Settings.get_Default():ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Sett" +
    "ings")]

namespace ST_43d0f4a3d5994daaa1715683bbe891b9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_43d0f4a3d5994daaa1715683bbe891b9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_43d0f4a3d5994daaa1715683bbe891b9")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_43d0f4a3d5994daaa1715683bbe891b9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_43d0f4a3d5994daaa1715683bbe891b9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_e964c6e61ff542319c62b0faaadde928.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGLWjmMAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAA4jMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJAzAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6BMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
MwAAAAAAAEgAAAACAAUAOCIAAKAQAAABAAAAAAAAANgyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBAB2AQAAAQAAESAADAAAKBAAAAoCKBEAAApvEgAACnIB
AABwbxMAAApvFAAACm8VAAAKCgIoEQAACm8SAAAKclUAAHBvEwAACm8UAAAKbxUAAAoLAigRAAAK
bxIAAApypQAAcG8TAAAKbxQAAApvFQAACgwCKBEAAApvEgAACnL7AABwbxMAAApvFAAACm8VAAAK
DQIoEQAACm8SAAAKclMBAHBvEwAACm8UAAAKbxUAAAoCKBEAAApvEgAACnJ7AQBwbxMAAApvFAAA
CigWAAAKEwQCKBEAAApvEgAACnKjAQBwbxMAAApvFAAACm8VAAAKEwVzFwAAChMGEQYGcxgAAApv
GQAAChEGbxoAAAoHbxsAAApzGAAACm8cAAAKEQZy0QEAcBEFKB0AAApvHgAAChEGFm8fAAAKEQYI
byAAAAoRBHMhAAAKJRdvIgAACiUWbyMAAAolFm8kAAAKJQYJcyUAAApvJgAAChEGbycAAAoCKBEA
AAoWbygAAAoqHgIoKQAACioeAigqAAAKKq5+AQAABC0ecmICAHDQAwAAAigrAAAKbywAAApzLQAA
CoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKC4AAAoqLnMIAAAGgAMAAAQqQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAfAQAACN+AADoBAAAFAcAACNTdHJpbmdz
AAAAAPwLAADUAgAAI1VTANAOAAAQAAAAI0dVSUQAAADgDgAAwAEAACNCbG9iAAAAAAAAAAIAAAFX
HaIJCQMAAAD6ATMAFgAAAQAAACkAAAAFAAAABgAAAAkAAAABAAAALgAAAAIAAAAQAAAAAQAAAAIA
AAADAAAABAAAAAEAAAABAAAABAAAAAEAAAABAAAAAAA6BAEAAAAAAAYAqQJ7BQYAOAN7BQYA9QFo
BQ8A7wUAAAYAIgL4BAYAjAL4BAYAbQL4BAYAHwP4BAYAyQL4BAYA4gL4BAYAOQL4BAYAVAJmAwoA
/QKoAwoAdAGoAw4A1gAqBAYAsgSdBAYA2AFoBQYAnwadBAYANwWbBQYAJwXjBA4AqAEUBA4ACQIU
BA4AkAHOBAYAvQF7BQ4ARwWyBg4ALwGyBgoAAgSoAxIAMQYPARIA4gAPAQYA4wadBA4AdgYqBA4A
CgUqBAYAggOdBAYAAQDjAw4A2AYqBA4AswAqBA4A0QOyBg4A6wayBgYAPwGdBAYA6wCdBAYACwf4
BAAAAABeAAAAAAABAAEAAQAQAMMEOgA5AAEAAQAAABAAogX+BUkAAQADAAABEAA7Bv4FXQADAAcA
AwEAAIoGAABBAAQACgARALcEwQARAGQBxQARAMYAyQAGBoYAzQBWgG4G0ABWgEQB0ABQIAAAAACG
AMkEBgABANIhAAAAAIYYWwUGAAEA2iEAAAAAgxhbBQYAAQDiIQAAAACTCDMF1AABAA4iAAAAAJMI
TAHZAAEAFSIAAAAAkwhYAd4AAQAdIgAAAACWCL0G5AACACQiAAAAAIYYWwUGAAIALCIAAAAAkRhh
BekAAgAAAAEAYAMJAFsFAQARAFsFBgAZAFsFCgApAFsFEAAxAFsFEAA5AFsFEABBAFsFEABJAFsF
EABRAFsFEABZAFsFEABhAFsFEABpAFsFBgCJAFsFBgCxAFsFFQDBAFsFBgDJAHEEJgBxAIIGLADZ
AC0GMQDhAJQENgDpAFYDPACRAIADQADxAA4ARAB5AFsFBgD5AFsFEAB5AKkESQB5ACAFTwAJAaQE
QAAMAJcAXQAJAZgGYwB5AP4GEAB5AGIEaQB5AKYGEAAZAVsFbgAZAYYEaQAZAaAAdAAZAVQGaQAp
AVsFewAZAUQGgQAZAZsAiADZAMkGAQBxAFsFBgCRAFsFBgA5Af0AjgA5AQcHlwCZAFsFnQC5AFsF
BgAIABQAtwAIABgAvAApAHMAJAEuAAsA/AAuABMABQEuABsAJAEuACMALQEuACsAVgEuADMAVgEu
ADsAVgEuAEMALQEuAEsAXAEuAFMAVgEuAFsAcwFDAGMAvABJAHMAJAFhAHsAvABjAGsAvAAbAAMA
AQAEAAMAAAA3Be0AAABsAfIAAADBBvcAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAVQAEgAAAAQAA
ALYguZ8AAAAAAAAWAAAABAAAAAAAAAAAAAAApQCOAAAAAAAOAAAAAAAAAAAAAACuAIkDAAAAAAQA
AAAAAAAAAAAAAKUAnQQAAAAADgAAAAAAAAAAAAAArgBnAAAAAAAAAAAAAQAAAKwFAAAFAAIAAAAA
Q29sbGVjdGlvbmAxAFRvSW50MzIAU1RfZTk2NGM2ZTYxZmY1NDIzMTljNjJiMGZhYWFkZGU5MjgA
U1RfNDNkMGY0YTNkNTk5NGRhYWExNzE1NjgzYmJlODkxYjkAPE1vZHVsZT4ATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAQWRkAFNlbmQAc2V0X0RlbGl2ZXJ5
TWV0aG9kAFNtdHBEZWxpdmVyeU1ldGhvZABkZWZhdWx0SW5zdGFuY2UATWFpbE1lc3NhZ2UAVmFy
aWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBTZWN1cml0eVByb3RvY29sVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdl
dF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2RlbABT
Y3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNU
X2U5NjRjNmU2MWZmNTQyMzE5YzYyYjBmYWFhZGRlOTI4LmRsbABzZXRfSXNCb2R5SHRtbABzZXRf
U2VjdXJpdHlQcm90b2NvbABzZXRfRW5hYmxlU3NsAGdldF9JdGVtAFN5c3RlbQBUcmltAHNldF9G
cm9tAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24A
Z2V0X1RvAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIAU2VydmljZVBvaW50TWFuYWdl
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF80M2QwZjRhM2Q1OTk0ZGFhYTE3MTU2ODNiYmU4
OTFiOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNDNk
MGY0YTNkNTk5NGRhYWExNzE1NjgzYmJlODkxYjkuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzAHNldF9DcmVkZW50aWFscwBzZXRfVXNlRGVmYXVsdENyZWRlbnRpYWxzAFN1Y2Nlc3MA
TWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAc2V0X1N1Ympl
Y3QAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AENvbnZl
cnQASUNyZWRlbnRpYWxzQnlIb3N0AHNldF9Cb2R5AGdldF9Bc3NlbWJseQAAUyQAUAByAG8AagBl
AGMAdAA6ADoARQByAHIAbwByAF8ATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AXwBGAHIAbwBtAF8A
RQBtAGEAaQBsAEkAZAAATyQAUAByAG8AagBlAGMAdAA6ADoARQByAHIAbwByAF8ATgBvAHQAaQBm
AGkAYwBhAHQAaQBvAG4AXwBUAG8AXwBFAG0AYQBpAGwASQBkAABVJABQAHIAbwBqAGUAYwB0ADoA
OgBFAHIAcgBvAHIAXwBOAG8AdABpAGYAaQBjAGEAdABpAG8AbgBfAEUAbQBhAGkAbABfAFMAdQBi
AGoAZQBjAHQAAFckAFAAcgBvAGoAZQBjAHQAOgA6AEUAcgByAG8AcgBfAE4AbwB0AGkAZgBpAGMA
YQB0AGkAbwBuAF8ARQBtAGEAaQBsAF8AUABhAHMAcwB3AG8AcgBkAAAnJABQAHIAbwBqAGUAYwB0
ADoAOgBTAE0AVABQAF8ASABvAHMAdAAAJyQAUAByAG8AagBlAGMAdAA6ADoAUwBNAFQAUABfAFAA
bwByAHQAAC1VAHMAZQByADoAOgBFAHIAcgBvAHIAUgBlAGMAbwByAGQAQwBvAHUAbgB0AACAj04A
dQBtAGIAZQByACAAbwBmACAAVQBuAHIAZQBzAG8AbAB2AGUAZAAgAEUAcgByAG8AcgAgAFIAZQBj
AG8AcgBkAHMAIABmAHIAbwBtACAARQBNAFIAIABSAGUAcABvAHIAdAAgAEYAaQBsAGUAIABQAGEA
dABpAGUAbgB0ACAATABvAGEAZAAgADoAIAAAcVMAVABfADQAMwBkADAAZgA0AGEAMwBkADUAOQA5
ADQAZABhAGEAYQAxADcAMQA1ADYAOAAzAGIAYgBlADgAOQAxAGIAOQAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAUyNJSK+c3E6HZqxRDtC69gAEIAEBCAMgAAEFIAEB
EREEIAEBDgUgAQERVQoHBw4ODg4IDhI9BQABARFpBCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBAAB
CBwFIAEBEn0FIAASgIEHFRKAiQESfQUgAQETAAUAAg4ODgQgAQECBSACAQ4IBiABARGAkQUgAgEO
DgYgAQESgJkFIAEBEj0IAAESgJ0RgKEFIAASgKUHIAIBDhKApQi3elxWGTTgiQiJhF3NgIDMkQQA
AAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQESUQQAABIQAwAAAQQIABJN
BAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfNDNkMGY0YTNkNTk5NGRhYWExNzE1NjgzYmJlODkxYjkAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAuDMAAAAAAAAA
AAAA0jMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQzAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAuZ+2IAAAAQC5n7YgPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA0ADMAZAAwAGYANABhADMAZAA1ADkAOQA0AGQAYQBhAGEAMQA3ADEANQA2ADgAMwBi
AGIAZQA4ADkAMQBiADkAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAAzADcANAAuADQAMAA4ADgAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBlADkANgA0AGMANgBlADYAMQBmAGYANQA0ADIAMwAxADkAYwA2ADIAYgAwAGYAYQBhAGEA
ZABkAGUAOQAyADgALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGUAOQA2ADQAYwA2AGUANgAxAGYAZgA1ADQAMgAzADEAOQBjADYAMgBiADAA
ZgBhAGEAYQBkAGQAZQA5ADIAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA0ADMAZAAwAGYANABhADMAZAA1ADkAOQA0AGQAYQBhAGEAMQA3ADEANQA2ADgA
MwBiAGIAZQA4ADkAMQBiADkAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgAMwA3ADQALgA0ADAAOAA4ADkAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAMwA3ADQALgA0ADAAOAA4ADkAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA5DMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{56172141-80cc-4539-85e9-92bd578e809c}"
      DTS:From="Package\Get Number of Error Records"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Send Email Notification for Error Records" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{CFDEF005-DB09-47E3-B402-A9394EBC9A2C}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get Number of Error Records" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{A60DDB4E-E432-4EF3-82FB-EEEC7097D4E8}"
      DTS:From="Package\Flexible file download"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Get List Of HJ Practice Folders" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{703AD9C2-A37D-43EC-8408-62A6128DD57E}"
      DTS:From="Package\Get List Of HJ Practice Folders"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{BE18EA27-3F51-4B32-8565-FC00C97FB641}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{2A3B5BE2-D9EB-461B-A183-A09E88E4BF27}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log Error into ETLBatchError on Main package failure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4bc21df3-edf7-46e2-9671-2b8700d04ead}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Error into ETLBatchError on Main package failure">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"insert into ETLBatchError values ("+ (DT_WSTR,12) @[User::ETLBatchId] +" , getdate(), '"+ replace(@[System::ErrorDescription],"'","") +"' )"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1AECDEB1-DE3D-43B4-B2FB-D8977A4BD016}"
              SQLTask:SqlStatementSource="insert into ETLBatchError values (95873 , getdate(), '' )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Flexible file download"
          TopLeft="233.166666666667,0.166666666666664" />
        <NodeLayout
          Size="166.4,41.6"
          Id="Package\Foreach Loop Container\Flexible File Copy"
          TopLeft="108,844" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\Foreach Loop Container\Flexible File Delete"
          TopLeft="99,920" />
        <NodeLayout
          Size="172,41.6"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Create Batch Entry"
          TopLeft="55.5,6.5" />
        <NodeLayout
          Size="140.8,41.6"
          Id="Package\Foreach Loop Container\Foreach Loop Container\DW Transfer"
          TopLeft="68,314.5" />
        <NodeLayout
          Size="99.2,41.6"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Ods"
          TopLeft="86,206.5" />
        <NodeLayout
          Size="172,41.6"
          Id="Package\Foreach Loop Container\Foreach Loop Container\RCO Demographic"
          TopLeft="56.5000000000001,418.5" />
        <NodeLayout
          Size="108,41.6"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Stage"
          TopLeft="84.5,104.5" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Update Batch Entry"
          TopLeft="63.3666666666667,516.933333333334" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="140,48.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="137,146.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="137,248.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66"
              Start="0,0"
              End="0,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="140.5,356.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="141.533333333333,460.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56.8333333333336"
              Start="0,0"
              End="0,49.3333333333336">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.3333333333336" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="304.8,614.4"
          Size="304.8,656.8"
          Id="Package\Foreach Loop Container\Foreach Loop Container"
          TopLeft="38.5000000000001,148.5" />
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\Foreach Loop Container\Get List Of Dates"
          TopLeft="100.5,83.5" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\Foreach Loop Container\Practice Comparison"
          TopLeft="108.6,14.8" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="182.1,125.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.8000000000001,23.4"
              Start="0,0"
              End="8.8000000000001,15.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.7" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.7"
                    Point2="0,11.7"
                    Point3="4,11.7" />
                  <mssgle:LineSegment
                    End="4.8000000000001,11.7" />
                  <mssgle:CubicBezierSegment
                    Point1="4.8000000000001,11.7"
                    Point2="8.8000000000001,11.7"
                    Point3="8.8000000000001,15.7" />
                  <mssgle:LineSegment
                    End="8.8000000000001,15.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="185.35,56.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.1"
              Start="0,0"
              End="0,19.6">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.6" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.8,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="188.25,886">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="191,805.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.5"
              Start="0,0"
              End="0,31">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="392.8,992"
          Size="392.8,1035.2"
          Id="Package\Foreach Loop Container"
          TopLeft="122.5,159" />
        <NodeLayout
          Size="230.4,41.6"
          Id="Package\Get List Of HJ Practice Folders"
          TopLeft="198.5,82" />
        <NodeLayout
          Size="222.4,41.6"
          Id="Package\Get Number of Error Records"
          TopLeft="203.166666666667,1234.83333333333" />
        <NodeLayout
          Size="280,41.6"
          Id="Package\Send Email Notification for Error Records"
          TopLeft="168.833333333333,1306" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="311.5,1276.83333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1666666666699"
              Start="0,0"
              End="0,21.6666666666699">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6666666666699" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="316.583333333333,1194">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.8333333333301"
              Start="0,0"
              End="0,33.3333333333301">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.3333333333301" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="314.033333333333,41.7666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.2333333333333"
              Start="0,0"
              End="0,32.7333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.7333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="316.25,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="341,42"
          Id="Package.EventHandlers[OnError]\Log Error into ETLBatchError on Main package failure"
          TopLeft="421,106" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Foreach Loop Container\Foreach Loop Container\Stage.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="345,42"
          Id="Package\Foreach Loop Container\Foreach Loop Container\Stage.EventHandlers[OnError]\Log Error into ETLBatchError on Stage package failure"
          TopLeft="358,113" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>